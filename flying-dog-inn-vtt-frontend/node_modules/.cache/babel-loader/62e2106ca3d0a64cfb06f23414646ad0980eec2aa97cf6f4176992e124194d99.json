{"ast":null,"code":"var _jsxFileName = \"/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/Maps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Maps.css';\nimport { useCampaign } from '../contexts/CampaignContext';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { DotsThreeVertical } from \"@phosphor-icons/react\";\n\n// Marker configuration\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MARKER_COLORS = {\n  '#FF0000': 'Red',\n  '#00FF00': 'Green',\n  '#0000FF': 'Blue',\n  '#FFFF00': 'Yellow',\n  '#FF00FF': 'Magenta',\n  '#00FFFF': 'Cyan',\n  '#000000': 'Black'\n};\nconst Maps = ({\n  onMapChange\n}) => {\n  _s();\n  const {\n    id: mapId\n  } = useParams();\n  const navigate = useNavigate();\n  const [mapData, setMapData] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    selectedCampaign\n  } = useCampaign();\n  const mapContainerRef = React.useRef(null);\n  const leafletMapRef = React.useRef(null);\n\n  // Menu handlers\n  const handleMenuOpen = event => {\n    event.stopPropagation();\n    setMenuAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n  const handleRenameMap = async () => {\n    handleMenuClose();\n    const newName = prompt('Enter new map name:', mapData === null || mapData === void 0 ? void 0 : mapData.name);\n    if (!newName || !newName.trim() || newName === (mapData === null || mapData === void 0 ? void 0 : mapData.name)) return;\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}/rename`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newName.trim(),\n          campaign_id: selectedCampaign.id\n        })\n      });\n      if (!response.ok) throw new Error('Failed to rename map');\n\n      // Update local state\n      setMapData(prev => ({\n        ...prev,\n        name: newName.trim()\n      }));\n      if (onMapChange) onMapChange({\n        ...mapData,\n        name: newName.trim()\n      });\n    } catch (error) {\n      console.error('Error renaming map:', error);\n      alert('Failed to rename map');\n    }\n  };\n  const handleDeleteMap = async () => {\n    handleMenuClose();\n    if (!window.confirm('Are you sure you want to delete this map? This action cannot be undone.')) {\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}?campaign_id=${selectedCampaign.id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete map');\n\n      // Navigate back to maps list\n      navigate('/maps');\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Failed to delete map');\n    }\n  };\n\n  // Cleanup function\n  const cleanupMap = () => {\n    if (leafletMapRef.current) {\n      leafletMapRef.current.remove();\n      leafletMapRef.current = null;\n    }\n  };\n\n  // Reset state when map changes\n  useEffect(() => {\n    setIsLoading(true);\n    setMapData(null);\n    setImageDimensions(null);\n    setMarkers([]);\n    cleanupMap();\n    return cleanupMap;\n  }, [mapId]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return cleanupMap;\n  }, []);\n\n  // Fetch map data and markers\n  useEffect(() => {\n    if (selectedCampaign && mapId) {\n      fetchMap();\n      fetchMarkers();\n    }\n  }, [mapId, selectedCampaign]);\n  const fetchMap = async () => {\n    if (!selectedCampaign) return;\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch map');\n      const data = await response.json();\n      setMapData(data);\n\n      // Load image dimensions\n      const img = new Image();\n      img.onload = () => {\n        console.log('Image loaded:', img.width, img.height);\n        setImageDimensions({\n          width: img.width,\n          height: img.height\n        });\n        setIsLoading(false);\n      };\n      img.onerror = error => {\n        console.error('Failed to load map image:', error);\n        setIsLoading(false);\n      };\n      img.src = `http://localhost:3001/maps/${data.path}`;\n      if (onMapChange) onMapChange(data);\n    } catch (error) {\n      console.error('Error fetching map:', error);\n      setIsLoading(false);\n      navigate('/maps');\n    }\n  };\n  const fetchMarkers = async () => {\n    if (!selectedCampaign || !mapId) return;\n    try {\n      console.log('Fetching markers for campaign:', selectedCampaign.id, 'map:', mapId);\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers?campaign_id=${selectedCampaign.id}`);\n      const responseText = await response.text();\n      console.log('Fetch markers response:', responseText);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch markers: ${responseText}`);\n      }\n      const data = JSON.parse(responseText);\n      console.log('Parsed markers:', data);\n\n      // Convert lat/lng to numbers\n      const parsedMarkers = data.map(marker => ({\n        ...marker,\n        lat: Number(marker.lat),\n        lng: Number(marker.lng),\n        campaign_id: selectedCampaign.id // Ensure campaign_id is set\n      }));\n      console.log('Processed markers:', parsedMarkers);\n      setMarkers(parsedMarkers);\n\n      // If map is already initialized, add markers\n      if (leafletMapRef.current) {\n        addMarkersToMap(parsedMarkers, leafletMapRef.current);\n      }\n    } catch (error) {\n      console.error('Error fetching markers:', error);\n    }\n  };\n  const createMarkerIcon = (color = '#FF0000') => {\n    return L.divIcon({\n      className: 'custom-marker',\n      html: `<div class=\"marker-icon\" style=\"color: ${color}\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"48\" viewBox=\"0 0 256 256\">\n          <path fill=\"currentColor\" d=\"M128,16a88.1,88.1,0,0,0-88,88c0,75.3,80,132.17,83.41,134.55a8,8,0,0,0,9.18,0C136,236.17,216,179.3,216,104A88.1,88.1,0,0,0,128,16Z\" stroke=\"rgba(0, 0, 0, 0.25)\" stroke-width=\"16\"/>\n        </svg>\n      </div>`,\n      iconSize: [32, 48],\n      iconAnchor: [16, 48],\n      popupAnchor: [0, -24]\n    });\n  };\n  const createPopupContent = (markerData, isNewMarker = false) => {\n    const uniqueId = Math.random().toString(36).substring(7);\n    const formId = `marker-form-${uniqueId}`;\n    const deleteId = `delete-btn-${uniqueId}`;\n    const submitId = `submit-btn-${uniqueId}`;\n\n    // Create popup content with unique IDs\n    const content = `\n      <div class=\"marker-content\">\n        <form id=\"${formId}\" class=\"marker-form\">\n          <input \n            type=\"text\" \n            name=\"label\" \n            value=\"${markerData.label || ''}\" \n            placeholder=\"Marker Label\" \n            class=\"marker-input\" \n            required\n          />\n          <textarea \n            name=\"description\" \n            placeholder=\"Description (optional)\" \n            class=\"marker-input\" \n            rows=\"2\"\n          >${markerData.description || ''}</textarea>\n          <select name=\"color\" class=\"marker-input\">\n            ${Object.entries(MARKER_COLORS).map(([value, label]) => `\n              <option value=\"${value}\" ${value === (markerData.color || '#FF0000') ? 'selected' : ''}>\n                ${label}\n              </option>\n            `).join('')}\n          </select>\n          <div class=\"marker-actions\">\n            <button type=\"button\" id=\"${deleteId}\" class=\"${isNewMarker ? 'cancel-button' : 'delete-button'}\">\n              ${isNewMarker ? 'Cancel' : 'Delete'}\n            </button>\n            <button type=\"button\" id=\"${submitId}\" class=\"dnd-button\">\n              ${isNewMarker ? 'Add Marker' : 'Save Changes'}\n            </button>\n          </div>\n        </form>\n      </div>\n    `;\n    return {\n      content,\n      formId,\n      deleteId,\n      submitId\n    };\n  };\n  const createViewPopupContent = markerData => {\n    const uniqueId = Math.random().toString(36).substring(7);\n    const editId = `edit-btn-${uniqueId}`;\n    const deleteId = `delete-btn-${uniqueId}`;\n    return {\n      content: `\n        <div class=\"marker-content\">\n          <div class=\"marker-header\">\n            <div class=\"marker-title-container\">\n              <div class=\"marker-title\">${markerData.label || 'Unnamed Marker'}</div>\n            </div>\n            ${markerData.description ? `<div class=\"marker-description\">${markerData.description}</div>` : ''}\n          </div>\n          <div class=\"marker-actions\">\n            <button type=\"button\" id=\"${deleteId}\" class=\"delete-button\">Delete</button>\n            <button type=\"button\" id=\"${editId}\" class=\"edit-button\">Edit</button>\n          </div>\n        </div>\n      `,\n      editId,\n      deleteId\n    };\n  };\n  const bindMarkerEvents = (marker, markerData, map, popup) => {\n    console.log('Binding events for marker:', markerData);\n\n    // Create initial popup if not exists\n    if (!popup) {\n      popup = L.popup({\n        className: 'custom-popup',\n        closeButton: true,\n        autoClose: false,\n        closeOnClick: false\n      });\n      marker.bindPopup(popup);\n    }\n\n    // Function to show view mode\n    const showViewMode = () => {\n      const {\n        content,\n        editId,\n        deleteId\n      } = createViewPopupContent(markerData);\n      popup.setContent(content);\n\n      // Get buttons after content is set\n      const deleteBtn = document.getElementById(deleteId);\n      const editBtn = document.getElementById(editId);\n      if (deleteBtn) {\n        deleteBtn.onclick = async () => {\n          try {\n            if (!selectedCampaign) throw new Error('No campaign selected');\n            if (!window.confirm('Are you sure you want to delete this marker?')) return;\n            deleteBtn.disabled = true;\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}?campaign_id=${selectedCampaign.id}`, {\n              method: 'DELETE',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n            if (!response.ok) throw new Error('Failed to delete marker');\n            marker.closePopup();\n            map.removeLayer(marker);\n            setMarkers(prev => prev.filter(m => m.id !== markerData.id));\n          } catch (error) {\n            console.error('Error deleting marker:', error);\n            deleteBtn.disabled = false;\n            alert('Failed to delete marker: ' + error.message);\n          }\n        };\n      }\n      if (editBtn) {\n        editBtn.onclick = () => {\n          const editContent = createPopupContent(markerData, false).content;\n          popup.setContent(editContent);\n          marker.openPopup(); // Keep popup open\n          showEditMode();\n        };\n      }\n    };\n\n    // Function to show edit mode\n    const showEditMode = () => {\n      // Get form elements after content is set\n      const form = document.getElementById('marker-form');\n      const cancelBtn = document.querySelector('.cancel-button');\n      const submitBtn = document.querySelector('.dnd-button');\n      if (cancelBtn) {\n        cancelBtn.onclick = () => {\n          showViewMode();\n        };\n      }\n      if (submitBtn && form) {\n        submitBtn.onclick = async () => {\n          try {\n            if (!selectedCampaign) throw new Error('No campaign selected');\n            if (!form.checkValidity()) {\n              form.reportValidity();\n              return;\n            }\n            submitBtn.disabled = true;\n            const formData = new FormData(form);\n            const updatedMarker = {\n              id: markerData.id,\n              map_id: Number(mapId),\n              campaign_id: selectedCampaign.id,\n              lat: Number(markerData.lat),\n              lng: Number(markerData.lng),\n              label: formData.get('label') || '',\n              description: formData.get('description') || '',\n              color: formData.get('color') || '#FF0000'\n            };\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}`, {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedMarker)\n            });\n            if (!response.ok) throw new Error('Failed to update marker');\n            const savedMarker = await response.json();\n            const parsedMarker = {\n              ...savedMarker,\n              lat: Number(markerData.lat),\n              lng: Number(markerData.lng),\n              label: formData.get('label') || '',\n              description: formData.get('description') || '',\n              color: formData.get('color') || '#FF0000',\n              campaign_id: selectedCampaign.id,\n              map_id: Number(mapId)\n            };\n            setMarkers(prev => prev.map(m => m.id === parsedMarker.id ? parsedMarker : m));\n            marker.setIcon(createMarkerIcon(parsedMarker.color));\n\n            // Update local marker data and show view mode\n            markerData = parsedMarker;\n            const viewContent = createViewPopupContent(parsedMarker).content;\n            popup.setContent(viewContent);\n            marker.openPopup(); // Keep popup open\n            showViewMode();\n          } catch (error) {\n            console.error('Error updating marker:', error);\n            submitBtn.disabled = false;\n            alert('Failed to update marker: ' + error.message);\n          }\n        };\n      }\n    };\n\n    // Add click handler\n    marker.on('click', () => {\n      map.eachLayer(layer => {\n        if (layer instanceof L.Marker && layer !== marker) {\n          layer.closePopup();\n        }\n      });\n      marker.openPopup();\n      showViewMode();\n    });\n\n    // Initialize with view mode\n    showViewMode();\n    return popup;\n  };\n  const addMarkersToMap = (markersData, targetMap) => {\n    if (!targetMap || !targetMap.getContainer()) {\n      console.warn('Map not ready for markers');\n      return;\n    }\n\n    // Only clear temporary markers\n    targetMap.eachLayer(layer => {\n      if (layer instanceof L.Marker && !layer.options.permanent) {\n        targetMap.removeLayer(layer);\n      }\n    });\n\n    // Add new markers\n    markersData.forEach(markerData => {\n      if (!markerData || typeof markerData.lat !== 'number' || typeof markerData.lng !== 'number') {\n        console.warn('Invalid marker data:', markerData);\n        return;\n      }\n      try {\n        // Create new marker\n        const marker = L.marker([markerData.lat, markerData.lng], {\n          icon: createMarkerIcon(markerData.color || '#FF0000'),\n          permanent: true\n        });\n\n        // Bind all events\n        bindMarkerEvents(marker, markerData, targetMap);\n\n        // Add to map\n        marker.addTo(targetMap);\n      } catch (error) {\n        console.error('Error adding marker:', markerData, error);\n      }\n    });\n  };\n\n  // Initialize map when data is ready\n  useEffect(() => {\n    if (!mapData || !imageDimensions || !mapContainerRef.current) return;\n    try {\n      console.log('Initializing map with dimensions:', imageDimensions);\n\n      // Clean up any existing map first\n      cleanupMap();\n      const bounds = [[0, 0], [imageDimensions.height, imageDimensions.width]];\n      const map = L.map(mapContainerRef.current, {\n        crs: L.CRS.Simple,\n        maxZoom: 2,\n        minZoom: -2,\n        maxBounds: bounds,\n        zoomControl: true\n      });\n\n      // Store the map instance in the ref\n      leafletMapRef.current = map;\n\n      // Add the image overlay immediately\n      const imageOverlay = L.imageOverlay(`http://localhost:3001/maps/${mapData.path}`, bounds).addTo(map);\n      map.fitBounds(bounds);\n\n      // Add click handler for new markers\n      map.on('click', e => {\n        // Only handle map clicks if we're not clicking a marker or popup\n        const isMarkerClick = e.originalEvent.target.closest('.leaflet-marker-icon');\n        const isPopupClick = e.originalEvent.target.closest('.leaflet-popup');\n        const isMapClick = e.originalEvent.target === map.getContainer() || e.originalEvent.target.classList.contains('leaflet-tile');\n\n        // If clicking on a marker or popup, let the marker's own click handler handle it\n        if (isMarkerClick || isPopupClick) {\n          return;\n        }\n\n        // If clicking on the map, close popups and create a new marker\n        map.eachLayer(layer => {\n          if (layer instanceof L.Marker) {\n            layer.closePopup();\n          }\n        });\n        if (!selectedCampaign) {\n          alert('Please select a campaign first');\n          return;\n        }\n        const tempMarker = L.marker(e.latlng, {\n          icon: createMarkerIcon('#FF0000'),\n          permanent: false\n        });\n        const tempMarkerData = {\n          map_id: Number(mapId),\n          lat: e.latlng.lat,\n          lng: e.latlng.lng,\n          label: '',\n          description: '',\n          color: '#FF0000',\n          campaign_id: selectedCampaign.id\n        };\n        const popup = L.popup({\n          className: 'custom-popup',\n          closeButton: true,\n          autoClose: false,\n          closeOnClick: false\n        });\n        popup.setContent(createPopupContent(tempMarkerData, true).content);\n        tempMarker.bindPopup(popup);\n        tempMarker.addTo(map);\n        tempMarker.openPopup();\n\n        // Get form elements after content is set\n        const form = document.getElementById('marker-form');\n        const cancelBtn = document.querySelector('.cancel-button');\n        const submitBtn = document.querySelector('.dnd-button');\n        if (cancelBtn) {\n          cancelBtn.onclick = () => {\n            map.removeLayer(tempMarker);\n          };\n        }\n        if (submitBtn && form) {\n          form.onsubmit = e => e.preventDefault();\n          submitBtn.onclick = async () => {\n            try {\n              if (!form.checkValidity()) {\n                form.reportValidity();\n                return;\n              }\n              submitBtn.disabled = true;\n              const formData = new FormData(form);\n              const newMarker = {\n                map_id: Number(mapId),\n                campaign_id: selectedCampaign.id,\n                lat: e.latlng.lat,\n                lng: e.latlng.lng,\n                label: formData.get('label') || '',\n                description: formData.get('description') || '',\n                color: formData.get('color') || '#FF0000'\n              };\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(newMarker)\n              });\n              if (!response.ok) throw new Error('Failed to create marker');\n              const savedMarker = await response.json();\n              map.removeLayer(tempMarker);\n\n              // Create the permanent marker with the saved data\n              const permanentMarker = L.marker([e.latlng.lat, e.latlng.lng], {\n                icon: createMarkerIcon(formData.get('color') || '#FF0000'),\n                permanent: true\n              });\n\n              // Use the saved marker data with proper ID\n              const parsedMarker = {\n                ...savedMarker,\n                lat: Number(e.latlng.lat),\n                lng: Number(e.latlng.lng),\n                label: formData.get('label') || '',\n                description: formData.get('description') || '',\n                color: formData.get('color') || '#FF0000',\n                campaign_id: selectedCampaign.id,\n                map_id: Number(mapId)\n              };\n              setMarkers(prev => [...prev, parsedMarker]);\n              bindMarkerEvents(permanentMarker, parsedMarker, map);\n              permanentMarker.addTo(map);\n            } catch (error) {\n              console.error('Error creating marker:', error);\n              submitBtn.disabled = false;\n              alert('Failed to create marker: ' + error.message);\n            }\n          };\n        }\n      });\n\n      // Handle ESC key to close popups\n      const handleEscKey = e => {\n        if (e.key === 'Escape' && leafletMapRef.current) {\n          leafletMapRef.current.eachLayer(layer => {\n            if (layer instanceof L.Marker) {\n              layer.closePopup();\n            }\n          });\n        }\n      };\n\n      // Add ESC key listener\n      document.addEventListener('keydown', handleEscKey);\n\n      // Add existing markers if any\n      if (markers.length > 0) {\n        console.log('Adding existing markers:', markers.length);\n        addMarkersToMap(markers, map);\n      }\n      setIsLoading(false);\n\n      // Cleanup function\n      return () => {\n        document.removeEventListener('keydown', handleEscKey);\n        cleanupMap();\n      };\n    } catch (error) {\n      console.error('Error initializing map:', error);\n      setIsLoading(false);\n    }\n  }, [mapData, imageDimensions]); // Remove markers dependency\n\n  // Add separate effect for marker updates\n  useEffect(() => {\n    if (leafletMapRef.current && markers.length > 0) {\n      console.log('Updating markers on map');\n      addMarkersToMap(markers, leafletMapRef.current);\n    }\n  }, [markers]);\n  const handleMarkerCreate = () => {};\n  const handleMarkerUpdate = () => {};\n  const handleMarkerDelete = () => {};\n  const handleMarkerEdit = () => {};\n  if (isLoading || !mapData || !imageDimensions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%'\n        },\n        children: \"Loading map...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '0 16px',\n          marginBottom: '16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: 0,\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [mapData === null || mapData === void 0 ? void 0 : mapData.name, /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleMenuOpen,\n            size: \"small\",\n            \"aria-label\": \"map settings\",\n            style: {\n              marginLeft: '8px',\n              color: '#111827'\n            },\n            children: /*#__PURE__*/_jsxDEV(DotsThreeVertical, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            anchorEl: menuAnchorEl,\n            open: Boolean(menuAnchorEl),\n            onClose: handleMenuClose,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'right'\n            },\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'right'\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleRenameMap,\n              children: \"Rename Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleDeleteMap,\n              style: {\n                color: '#d32f2f'\n              },\n              children: \"Delete Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainerRef,\n        style: {\n          height: 'calc(100vh - 80px)',\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 674,\n    columnNumber: 5\n  }, this);\n};\n_s(Maps, \"8Rjkta4JrCCodGHDyHv+LrxJeAE=\", false, function () {\n  return [useParams, useNavigate, useCampaign];\n});\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","L","useCampaign","IconButton","Menu","MenuItem","DotsThreeVertical","jsxDEV","_jsxDEV","Fragment","_Fragment","MARKER_COLORS","Maps","onMapChange","_s","id","mapId","navigate","mapData","setMapData","markers","setMarkers","menuAnchorEl","setMenuAnchorEl","imageDimensions","setImageDimensions","isLoading","setIsLoading","selectedCampaign","mapContainerRef","useRef","leafletMapRef","handleMenuOpen","event","stopPropagation","currentTarget","handleMenuClose","handleRenameMap","newName","prompt","name","trim","response","fetch","method","headers","body","JSON","stringify","campaign_id","ok","Error","prev","error","console","alert","handleDeleteMap","window","confirm","cleanupMap","current","remove","fetchMap","fetchMarkers","data","json","img","Image","onload","log","width","height","onerror","src","path","responseText","text","parse","parsedMarkers","map","marker","lat","Number","lng","addMarkersToMap","createMarkerIcon","color","divIcon","className","html","iconSize","iconAnchor","popupAnchor","createPopupContent","markerData","isNewMarker","uniqueId","Math","random","toString","substring","formId","deleteId","submitId","content","label","description","Object","entries","value","join","createViewPopupContent","editId","bindMarkerEvents","popup","closeButton","autoClose","closeOnClick","bindPopup","showViewMode","setContent","deleteBtn","document","getElementById","editBtn","onclick","disabled","closePopup","removeLayer","filter","m","message","editContent","openPopup","showEditMode","form","cancelBtn","querySelector","submitBtn","checkValidity","reportValidity","formData","FormData","updatedMarker","map_id","get","savedMarker","parsedMarker","setIcon","viewContent","on","eachLayer","layer","Marker","markersData","targetMap","getContainer","warn","options","permanent","forEach","icon","addTo","bounds","crs","CRS","Simple","maxZoom","minZoom","maxBounds","zoomControl","imageOverlay","fitBounds","e","isMarkerClick","originalEvent","target","closest","isPopupClick","isMapClick","classList","contains","tempMarker","latlng","tempMarkerData","onsubmit","preventDefault","newMarker","permanentMarker","handleEscKey","key","addEventListener","length","removeEventListener","handleMarkerCreate","handleMarkerUpdate","handleMarkerDelete","handleMarkerEdit","children","style","display","alignItems","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","padding","marginBottom","margin","onClick","size","marginLeft","anchorEl","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","ref","_c","$RefreshReg$"],"sources":["/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/Maps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Maps.css';\nimport { useCampaign } from '../contexts/CampaignContext';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { DotsThreeVertical } from \"@phosphor-icons/react\";\n\n// Marker configuration\nconst MARKER_COLORS = {\n  '#FF0000': 'Red',\n  '#00FF00': 'Green',\n  '#0000FF': 'Blue',\n  '#FFFF00': 'Yellow',\n  '#FF00FF': 'Magenta',\n  '#00FFFF': 'Cyan',\n  '#000000': 'Black'\n};\n\nconst Maps = ({ onMapChange }) => {\n  const { id: mapId } = useParams();\n  const navigate = useNavigate();\n  const [mapData, setMapData] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { selectedCampaign } = useCampaign();\n  const mapContainerRef = React.useRef(null);\n  const leafletMapRef = React.useRef(null);\n\n  // Menu handlers\n  const handleMenuOpen = (event) => {\n    event.stopPropagation();\n    setMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n\n  const handleRenameMap = async () => {\n    handleMenuClose();\n    const newName = prompt('Enter new map name:', mapData?.name);\n    if (!newName || !newName.trim() || newName === mapData?.name) return;\n\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}/rename`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: newName.trim(),\n          campaign_id: selectedCampaign.id\n        }),\n      });\n\n      if (!response.ok) throw new Error('Failed to rename map');\n      \n      // Update local state\n      setMapData(prev => ({ ...prev, name: newName.trim() }));\n      if (onMapChange) onMapChange({ ...mapData, name: newName.trim() });\n    } catch (error) {\n      console.error('Error renaming map:', error);\n      alert('Failed to rename map');\n    }\n  };\n\n  const handleDeleteMap = async () => {\n    handleMenuClose();\n    if (!window.confirm('Are you sure you want to delete this map? This action cannot be undone.')) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}?campaign_id=${selectedCampaign.id}`, {\n        method: 'DELETE'\n      });\n\n      if (!response.ok) throw new Error('Failed to delete map');\n      \n      // Navigate back to maps list\n      navigate('/maps');\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Failed to delete map');\n    }\n  };\n\n  // Cleanup function\n  const cleanupMap = () => {\n    if (leafletMapRef.current) {\n      leafletMapRef.current.remove();\n      leafletMapRef.current = null;\n    }\n  };\n\n  // Reset state when map changes\n  useEffect(() => {\n    setIsLoading(true);\n    setMapData(null);\n    setImageDimensions(null);\n    setMarkers([]);\n    cleanupMap();\n    return cleanupMap;\n  }, [mapId]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return cleanupMap;\n  }, []);\n\n  // Fetch map data and markers\n  useEffect(() => {\n    if (selectedCampaign && mapId) {\n      fetchMap();\n      fetchMarkers();\n    }\n  }, [mapId, selectedCampaign]);\n\n  const fetchMap = async () => {\n    if (!selectedCampaign) return;\n    \n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch map');\n      const data = await response.json();\n      setMapData(data);\n      \n      // Load image dimensions\n      const img = new Image();\n      img.onload = () => {\n        console.log('Image loaded:', img.width, img.height);\n        setImageDimensions({ width: img.width, height: img.height });\n        setIsLoading(false);\n      };\n      img.onerror = (error) => {\n        console.error('Failed to load map image:', error);\n        setIsLoading(false);\n      };\n      img.src = `http://localhost:3001/maps/${data.path}`;\n      \n      if (onMapChange) onMapChange(data);\n    } catch (error) {\n      console.error('Error fetching map:', error);\n      setIsLoading(false);\n      navigate('/maps');\n    }\n  };\n\n  const fetchMarkers = async () => {\n    if (!selectedCampaign || !mapId) return;\n    \n    try {\n      console.log('Fetching markers for campaign:', selectedCampaign.id, 'map:', mapId);\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers?campaign_id=${selectedCampaign.id}`);\n      \n      const responseText = await response.text();\n      console.log('Fetch markers response:', responseText);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch markers: ${responseText}`);\n      }\n      \n      const data = JSON.parse(responseText);\n      console.log('Parsed markers:', data);\n      \n      // Convert lat/lng to numbers\n      const parsedMarkers = data.map(marker => ({\n        ...marker,\n        lat: Number(marker.lat),\n        lng: Number(marker.lng),\n        campaign_id: selectedCampaign.id // Ensure campaign_id is set\n      }));\n      \n      console.log('Processed markers:', parsedMarkers);\n      setMarkers(parsedMarkers);\n      \n      // If map is already initialized, add markers\n      if (leafletMapRef.current) {\n        addMarkersToMap(parsedMarkers, leafletMapRef.current);\n      }\n    } catch (error) {\n      console.error('Error fetching markers:', error);\n    }\n  };\n\n  const createMarkerIcon = (color = '#FF0000') => {\n    return L.divIcon({\n      className: 'custom-marker',\n      html: `<div class=\"marker-icon\" style=\"color: ${color}\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"48\" viewBox=\"0 0 256 256\">\n          <path fill=\"currentColor\" d=\"M128,16a88.1,88.1,0,0,0-88,88c0,75.3,80,132.17,83.41,134.55a8,8,0,0,0,9.18,0C136,236.17,216,179.3,216,104A88.1,88.1,0,0,0,128,16Z\" stroke=\"rgba(0, 0, 0, 0.25)\" stroke-width=\"16\"/>\n        </svg>\n      </div>`,\n      iconSize: [32, 48],\n      iconAnchor: [16, 48],\n      popupAnchor: [0, -24]\n    });\n  };\n\n  const createPopupContent = (markerData, isNewMarker = false) => {\n    const uniqueId = Math.random().toString(36).substring(7);\n    const formId = `marker-form-${uniqueId}`;\n    const deleteId = `delete-btn-${uniqueId}`;\n    const submitId = `submit-btn-${uniqueId}`;\n\n    // Create popup content with unique IDs\n    const content = `\n      <div class=\"marker-content\">\n        <form id=\"${formId}\" class=\"marker-form\">\n          <input \n            type=\"text\" \n            name=\"label\" \n            value=\"${markerData.label || ''}\" \n            placeholder=\"Marker Label\" \n            class=\"marker-input\" \n            required\n          />\n          <textarea \n            name=\"description\" \n            placeholder=\"Description (optional)\" \n            class=\"marker-input\" \n            rows=\"2\"\n          >${markerData.description || ''}</textarea>\n          <select name=\"color\" class=\"marker-input\">\n            ${Object.entries(MARKER_COLORS).map(([value, label]) => `\n              <option value=\"${value}\" ${value === (markerData.color || '#FF0000') ? 'selected' : ''}>\n                ${label}\n              </option>\n            `).join('')}\n          </select>\n          <div class=\"marker-actions\">\n            <button type=\"button\" id=\"${deleteId}\" class=\"${isNewMarker ? 'cancel-button' : 'delete-button'}\">\n              ${isNewMarker ? 'Cancel' : 'Delete'}\n            </button>\n            <button type=\"button\" id=\"${submitId}\" class=\"dnd-button\">\n              ${isNewMarker ? 'Add Marker' : 'Save Changes'}\n            </button>\n          </div>\n        </form>\n      </div>\n    `;\n\n    return { content, formId, deleteId, submitId };\n  };\n\n  const createViewPopupContent = (markerData) => {\n    const uniqueId = Math.random().toString(36).substring(7);\n    const editId = `edit-btn-${uniqueId}`;\n    const deleteId = `delete-btn-${uniqueId}`;\n\n    return {\n      content: `\n        <div class=\"marker-content\">\n          <div class=\"marker-header\">\n            <div class=\"marker-title-container\">\n              <div class=\"marker-title\">${markerData.label || 'Unnamed Marker'}</div>\n            </div>\n            ${markerData.description ? `<div class=\"marker-description\">${markerData.description}</div>` : ''}\n          </div>\n          <div class=\"marker-actions\">\n            <button type=\"button\" id=\"${deleteId}\" class=\"delete-button\">Delete</button>\n            <button type=\"button\" id=\"${editId}\" class=\"edit-button\">Edit</button>\n          </div>\n        </div>\n      `,\n      editId,\n      deleteId\n    };\n  };\n\n  const bindMarkerEvents = (marker, markerData, map, popup) => {\n    console.log('Binding events for marker:', markerData);\n    \n    // Create initial popup if not exists\n    if (!popup) {\n      popup = L.popup({\n        className: 'custom-popup',\n        closeButton: true,\n        autoClose: false,\n        closeOnClick: false\n      });\n      marker.bindPopup(popup);\n    }\n\n    // Function to show view mode\n    const showViewMode = () => {\n      const { content, editId, deleteId } = createViewPopupContent(markerData);\n      popup.setContent(content);\n      \n      // Get buttons after content is set\n      const deleteBtn = document.getElementById(deleteId);\n      const editBtn = document.getElementById(editId);\n\n      if (deleteBtn) {\n        deleteBtn.onclick = async () => {\n          try {\n            if (!selectedCampaign) throw new Error('No campaign selected');\n            if (!window.confirm('Are you sure you want to delete this marker?')) return;\n\n            deleteBtn.disabled = true;\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}?campaign_id=${selectedCampaign.id}`, {\n              method: 'DELETE',\n              headers: { 'Content-Type': 'application/json' }\n            });\n            \n            if (!response.ok) throw new Error('Failed to delete marker');\n\n            marker.closePopup();\n            map.removeLayer(marker);\n            setMarkers(prev => prev.filter(m => m.id !== markerData.id));\n          } catch (error) {\n            console.error('Error deleting marker:', error);\n            deleteBtn.disabled = false;\n            alert('Failed to delete marker: ' + error.message);\n          }\n        };\n      }\n\n      if (editBtn) {\n        editBtn.onclick = () => {\n          const editContent = createPopupContent(markerData, false).content;\n          popup.setContent(editContent);\n          marker.openPopup();  // Keep popup open\n          showEditMode();\n        };\n      }\n    };\n\n    // Function to show edit mode\n    const showEditMode = () => {\n      // Get form elements after content is set\n      const form = document.getElementById('marker-form');\n      const cancelBtn = document.querySelector('.cancel-button');\n      const submitBtn = document.querySelector('.dnd-button');\n\n      if (cancelBtn) {\n        cancelBtn.onclick = () => {\n          showViewMode();\n        };\n      }\n\n      if (submitBtn && form) {\n        submitBtn.onclick = async () => {\n          try {\n            if (!selectedCampaign) throw new Error('No campaign selected');\n            if (!form.checkValidity()) {\n              form.reportValidity();\n              return;\n            }\n\n            submitBtn.disabled = true;\n            const formData = new FormData(form);\n            const updatedMarker = {\n              id: markerData.id,\n              map_id: Number(mapId),\n              campaign_id: selectedCampaign.id,\n              lat: Number(markerData.lat),\n              lng: Number(markerData.lng),\n              label: formData.get('label') || '',\n              description: formData.get('description') || '',\n              color: formData.get('color') || '#FF0000'\n            };\n\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}`, {\n              method: 'PUT',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(updatedMarker)\n            });\n\n            if (!response.ok) throw new Error('Failed to update marker');\n            \n            const savedMarker = await response.json();\n            const parsedMarker = {\n              ...savedMarker,\n              lat: Number(markerData.lat),\n              lng: Number(markerData.lng),\n              label: formData.get('label') || '',\n              description: formData.get('description') || '',\n              color: formData.get('color') || '#FF0000',\n              campaign_id: selectedCampaign.id,\n              map_id: Number(mapId)\n            };\n            \n            setMarkers(prev => prev.map(m => m.id === parsedMarker.id ? parsedMarker : m));\n            marker.setIcon(createMarkerIcon(parsedMarker.color));\n            \n            // Update local marker data and show view mode\n            markerData = parsedMarker;\n            const viewContent = createViewPopupContent(parsedMarker).content;\n            popup.setContent(viewContent);\n            marker.openPopup();  // Keep popup open\n            showViewMode();\n          } catch (error) {\n            console.error('Error updating marker:', error);\n            submitBtn.disabled = false;\n            alert('Failed to update marker: ' + error.message);\n          }\n        };\n      }\n    };\n\n    // Add click handler\n    marker.on('click', () => {\n      map.eachLayer((layer) => {\n        if (layer instanceof L.Marker && layer !== marker) {\n          layer.closePopup();\n        }\n      });\n      \n      marker.openPopup();\n      showViewMode();\n    });\n\n    // Initialize with view mode\n    showViewMode();\n    return popup;\n  };\n\n  const addMarkersToMap = (markersData, targetMap) => {\n    if (!targetMap || !targetMap.getContainer()) {\n      console.warn('Map not ready for markers');\n      return;\n    }\n\n    // Only clear temporary markers\n    targetMap.eachLayer((layer) => {\n      if (layer instanceof L.Marker && !layer.options.permanent) {\n        targetMap.removeLayer(layer);\n      }\n    });\n\n    // Add new markers\n    markersData.forEach(markerData => {\n      if (!markerData || typeof markerData.lat !== 'number' || typeof markerData.lng !== 'number') {\n        console.warn('Invalid marker data:', markerData);\n        return;\n      }\n\n      try {\n        // Create new marker\n        const marker = L.marker([markerData.lat, markerData.lng], {\n          icon: createMarkerIcon(markerData.color || '#FF0000'),\n          permanent: true\n        });\n\n        // Bind all events\n        bindMarkerEvents(marker, markerData, targetMap);\n\n        // Add to map\n        marker.addTo(targetMap);\n      } catch (error) {\n        console.error('Error adding marker:', markerData, error);\n      }\n    });\n  };\n\n  // Initialize map when data is ready\n  useEffect(() => {\n    if (!mapData || !imageDimensions || !mapContainerRef.current) return;\n\n    try {\n      console.log('Initializing map with dimensions:', imageDimensions);\n      \n      // Clean up any existing map first\n      cleanupMap();\n\n      const bounds = [[0, 0], [imageDimensions.height, imageDimensions.width]];\n      const map = L.map(mapContainerRef.current, {\n        crs: L.CRS.Simple,\n        maxZoom: 2,\n        minZoom: -2,\n        maxBounds: bounds,\n        zoomControl: true\n      });\n\n      // Store the map instance in the ref\n      leafletMapRef.current = map;\n\n      // Add the image overlay immediately\n      const imageOverlay = L.imageOverlay(`http://localhost:3001/maps/${mapData.path}`, bounds).addTo(map);\n      map.fitBounds(bounds);\n\n      // Add click handler for new markers\n      map.on('click', (e) => {\n        // Only handle map clicks if we're not clicking a marker or popup\n        const isMarkerClick = e.originalEvent.target.closest('.leaflet-marker-icon');\n        const isPopupClick = e.originalEvent.target.closest('.leaflet-popup');\n        const isMapClick = e.originalEvent.target === map.getContainer() || \n                          e.originalEvent.target.classList.contains('leaflet-tile');\n\n        // If clicking on a marker or popup, let the marker's own click handler handle it\n        if (isMarkerClick || isPopupClick) {\n          return;\n        }\n\n        // If clicking on the map, close popups and create a new marker\n        map.eachLayer((layer) => {\n          if (layer instanceof L.Marker) {\n            layer.closePopup();\n          }\n        });\n\n        if (!selectedCampaign) {\n          alert('Please select a campaign first');\n          return;\n        }\n\n        const tempMarker = L.marker(e.latlng, {\n          icon: createMarkerIcon('#FF0000'),\n          permanent: false\n        });\n\n        const tempMarkerData = {\n          map_id: Number(mapId),\n          lat: e.latlng.lat,\n          lng: e.latlng.lng,\n          label: '',\n          description: '',\n          color: '#FF0000',\n          campaign_id: selectedCampaign.id\n        };\n\n        const popup = L.popup({\n          className: 'custom-popup',\n          closeButton: true,\n          autoClose: false,\n          closeOnClick: false\n        });\n\n        popup.setContent(createPopupContent(tempMarkerData, true).content);\n        tempMarker.bindPopup(popup);\n        tempMarker.addTo(map);\n        tempMarker.openPopup();\n\n        // Get form elements after content is set\n        const form = document.getElementById('marker-form');\n        const cancelBtn = document.querySelector('.cancel-button');\n        const submitBtn = document.querySelector('.dnd-button');\n\n        if (cancelBtn) {\n          cancelBtn.onclick = () => {\n            map.removeLayer(tempMarker);\n          };\n        }\n\n        if (submitBtn && form) {\n          form.onsubmit = (e) => e.preventDefault();\n          \n          submitBtn.onclick = async () => {\n            try {\n              if (!form.checkValidity()) {\n                form.reportValidity();\n                return;\n              }\n\n              submitBtn.disabled = true;\n              const formData = new FormData(form);\n              const newMarker = {\n                map_id: Number(mapId),\n                campaign_id: selectedCampaign.id,\n                lat: e.latlng.lat,\n                lng: e.latlng.lng,\n                label: formData.get('label') || '',\n                description: formData.get('description') || '',\n                color: formData.get('color') || '#FF0000'\n              };\n\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(newMarker)\n              });\n\n              if (!response.ok) throw new Error('Failed to create marker');\n              \n              const savedMarker = await response.json();\n              map.removeLayer(tempMarker);\n\n              // Create the permanent marker with the saved data\n              const permanentMarker = L.marker([e.latlng.lat, e.latlng.lng], {\n                icon: createMarkerIcon(formData.get('color') || '#FF0000'),\n                permanent: true\n              });\n\n              // Use the saved marker data with proper ID\n              const parsedMarker = {\n                ...savedMarker,\n                lat: Number(e.latlng.lat),\n                lng: Number(e.latlng.lng),\n                label: formData.get('label') || '',\n                description: formData.get('description') || '',\n                color: formData.get('color') || '#FF0000',\n                campaign_id: selectedCampaign.id,\n                map_id: Number(mapId)\n              };\n\n              setMarkers(prev => [...prev, parsedMarker]);\n              bindMarkerEvents(permanentMarker, parsedMarker, map);\n              permanentMarker.addTo(map);\n\n            } catch (error) {\n              console.error('Error creating marker:', error);\n              submitBtn.disabled = false;\n              alert('Failed to create marker: ' + error.message);\n            }\n          };\n        }\n      });\n\n      // Handle ESC key to close popups\n      const handleEscKey = (e) => {\n        if (e.key === 'Escape' && leafletMapRef.current) {\n          leafletMapRef.current.eachLayer((layer) => {\n            if (layer instanceof L.Marker) {\n              layer.closePopup();\n            }\n          });\n        }\n      };\n\n      // Add ESC key listener\n      document.addEventListener('keydown', handleEscKey);\n\n      // Add existing markers if any\n      if (markers.length > 0) {\n        console.log('Adding existing markers:', markers.length);\n        addMarkersToMap(markers, map);\n      }\n\n      setIsLoading(false);\n\n      // Cleanup function\n      return () => {\n        document.removeEventListener('keydown', handleEscKey);\n        cleanupMap();\n      };\n\n    } catch (error) {\n      console.error('Error initializing map:', error);\n      setIsLoading(false);\n    }\n  }, [mapData, imageDimensions]); // Remove markers dependency\n\n  // Add separate effect for marker updates\n  useEffect(() => {\n    if (leafletMapRef.current && markers.length > 0) {\n      console.log('Updating markers on map');\n      addMarkersToMap(markers, leafletMapRef.current);\n    }\n  }, [markers]);\n\n  const handleMarkerCreate = () => {};\n  const handleMarkerUpdate = () => {};\n  const handleMarkerDelete = () => {};\n  const handleMarkerEdit = () => {};\n\n  if (isLoading || !mapData || !imageDimensions) {\n    return (\n      <div className=\"map-container\">\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\n          Loading map...\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"map-container\">\n      {isLoading ? (\n        <div className=\"loading\">Loading map...</div>\n      ) : (\n        <>\n          <div style={{ display: 'flex', alignItems: 'center', padding: '0 16px', marginBottom: '16px' }}>\n            <h2 style={{ margin: 0, display: 'flex', alignItems: 'center' }}>\n              {mapData?.name}\n              <IconButton\n                onClick={handleMenuOpen}\n                size=\"small\"\n                aria-label=\"map settings\"\n                style={{ marginLeft: '8px', color: '#111827' }}\n              >\n                <DotsThreeVertical size={24} />\n              </IconButton>\n              <Menu\n                anchorEl={menuAnchorEl}\n                open={Boolean(menuAnchorEl)}\n                onClose={handleMenuClose}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                <MenuItem onClick={handleRenameMap}>Rename Map</MenuItem>\n                <MenuItem onClick={handleDeleteMap} style={{ color: '#d32f2f' }}>Delete Map</MenuItem>\n              </Menu>\n            </h2>\n          </div>\n          <div ref={mapContainerRef} style={{ height: 'calc(100vh - 80px)', width: '100%' }} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Maps;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}