{"ast":null,"code":"var _jsxFileName = \"/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/contexts/CampaignContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CampaignLoadingOverlay from '../components/CampaignLoadingOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampaignContext = /*#__PURE__*/createContext();\nexport const CampaignProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pendingCampaignId, setPendingCampaignId] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log('Initializing campaign...');\n    const storedCampaignId = localStorage.getItem('selectedCampaignId');\n    console.log('Initial localStorage campaign ID:', storedCampaignId);\n    if (storedCampaignId) {\n      console.log('Found stored campaign ID:', storedCampaignId);\n      fetchCampaign(storedCampaignId);\n    }\n  }, []);\n  const fetchCampaign = async campaignId => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/campaigns/${campaignId}`);\n      console.log('Campaign fetch response:', response.status);\n      if (response.ok) {\n        const campaign = await response.json();\n        console.log('Successfully loaded campaign:', campaign);\n        setSelectedCampaign(campaign);\n      } else {\n        console.error('Failed to fetch campaign:', campaignId);\n        setSelectedCampaign(null);\n        localStorage.removeItem('selectedCampaignId');\n      }\n    } catch (error) {\n      console.error('Error fetching campaign:', error);\n      setSelectedCampaign(null);\n      localStorage.removeItem('selectedCampaignId');\n    }\n  };\n  const selectCampaign = useCallback(async campaign => {\n    console.log('Selected campaign changed:', campaign);\n    if (campaign) {\n      setIsLoading(true);\n      localStorage.setItem('selectedCampaignId', campaign.id);\n      setPendingCampaignId(campaign.id);\n\n      // Actual campaign switch will happen after 1 second\n      setTimeout(async () => {\n        await fetchCampaign(campaign.id);\n        navigate('/');\n      }, 1000);\n    } else {\n      localStorage.removeItem('selectedCampaignId');\n      setSelectedCampaign(null);\n      setPendingCampaignId(null);\n      navigate('/');\n    }\n  }, [navigate]);\n  const handleLoadComplete = useCallback(() => {\n    setIsLoading(false);\n    setPendingCampaignId(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CampaignContext.Provider, {\n    value: {\n      selectedCampaign,\n      selectCampaign\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(CampaignLoadingOverlay, {\n      isVisible: isLoading,\n      onLoadComplete: handleLoadComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(CampaignProvider, \"172q5zzKo1kpBXMEFW9Kk0ArYpg=\", false, function () {\n  return [useNavigate];\n});\n_c = CampaignProvider;\nexport const useCampaign = () => {\n  _s2();\n  const context = useContext(CampaignContext);\n  if (!context) {\n    throw new Error('useCampaign must be used within a CampaignProvider');\n  }\n  return context;\n};\n_s2(useCampaign, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CampaignProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","useNavigate","CampaignLoadingOverlay","jsxDEV","_jsxDEV","CampaignContext","CampaignProvider","children","_s","selectedCampaign","setSelectedCampaign","isLoading","setIsLoading","pendingCampaignId","setPendingCampaignId","navigate","console","log","storedCampaignId","localStorage","getItem","fetchCampaign","campaignId","response","fetch","status","ok","campaign","json","error","removeItem","selectCampaign","setItem","id","setTimeout","handleLoadComplete","Provider","value","isVisible","onLoadComplete","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCampaign","_s2","context","Error","$RefreshReg$"],"sources":["/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/contexts/CampaignContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CampaignLoadingOverlay from '../components/CampaignLoadingOverlay';\n\nconst CampaignContext = createContext();\n\nexport const CampaignProvider = ({ children }) => {\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pendingCampaignId, setPendingCampaignId] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    console.log('Initializing campaign...');\n    const storedCampaignId = localStorage.getItem('selectedCampaignId');\n    console.log('Initial localStorage campaign ID:', storedCampaignId);\n\n    if (storedCampaignId) {\n      console.log('Found stored campaign ID:', storedCampaignId);\n      fetchCampaign(storedCampaignId);\n    }\n  }, []);\n\n  const fetchCampaign = async (campaignId) => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/campaigns/${campaignId}`);\n      console.log('Campaign fetch response:', response.status);\n      \n      if (response.ok) {\n        const campaign = await response.json();\n        console.log('Successfully loaded campaign:', campaign);\n        setSelectedCampaign(campaign);\n      } else {\n        console.error('Failed to fetch campaign:', campaignId);\n        setSelectedCampaign(null);\n        localStorage.removeItem('selectedCampaignId');\n      }\n    } catch (error) {\n      console.error('Error fetching campaign:', error);\n      setSelectedCampaign(null);\n      localStorage.removeItem('selectedCampaignId');\n    }\n  };\n\n  const selectCampaign = useCallback(async (campaign) => {\n    console.log('Selected campaign changed:', campaign);\n    \n    if (campaign) {\n      setIsLoading(true);\n      localStorage.setItem('selectedCampaignId', campaign.id);\n      setPendingCampaignId(campaign.id);\n      \n      // Actual campaign switch will happen after 1 second\n      setTimeout(async () => {\n        await fetchCampaign(campaign.id);\n        navigate('/');\n      }, 1000);\n    } else {\n      localStorage.removeItem('selectedCampaignId');\n      setSelectedCampaign(null);\n      setPendingCampaignId(null);\n      navigate('/');\n    }\n  }, [navigate]);\n\n  const handleLoadComplete = useCallback(() => {\n    setIsLoading(false);\n    setPendingCampaignId(null);\n  }, []);\n\n  return (\n    <CampaignContext.Provider value={{ selectedCampaign, selectCampaign }}>\n      {children}\n      <CampaignLoadingOverlay \n        isVisible={isLoading} \n        onLoadComplete={handleLoadComplete}\n      />\n    </CampaignContext.Provider>\n  );\n};\n\nexport const useCampaign = () => {\n  const context = useContext(CampaignContext);\n  if (!context) {\n    throw new Error('useCampaign must be used within a CampaignProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}