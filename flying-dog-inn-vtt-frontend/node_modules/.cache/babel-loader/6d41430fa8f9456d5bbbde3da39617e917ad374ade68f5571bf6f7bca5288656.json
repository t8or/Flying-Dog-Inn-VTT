{"ast":null,"code":"var _jsxFileName = \"/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/Maps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Maps.css';\nimport { useCampaign } from '../contexts/CampaignContext';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { DotsThreeVertical } from \"@phosphor-icons/react\";\n\n// Marker configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MARKER_COLORS = {\n  '#FF0000': 'Red',\n  '#00FF00': 'Green',\n  '#0000FF': 'Blue',\n  '#FFFF00': 'Yellow',\n  '#FF00FF': 'Magenta',\n  '#00FFFF': 'Cyan',\n  '#000000': 'Black'\n};\nconst Maps = ({\n  onMapChange\n}) => {\n  _s();\n  const {\n    id: mapId\n  } = useParams();\n  const navigate = useNavigate();\n  const [map, setMap] = useState(null);\n  const [leafletMap, setLeafletMap] = useState(null);\n  const [mapData, setMapData] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState(null);\n  const {\n    selectedCampaign\n  } = useCampaign();\n  const mapContainerRef = React.useRef(null);\n\n  // Fetch map data\n  useEffect(() => {\n    if (selectedCampaign && mapId) {\n      fetchMap();\n      fetchMarkers();\n    }\n  }, [mapId, selectedCampaign]);\n  const fetchMap = async () => {\n    if (!selectedCampaign) return;\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch map');\n      const data = await response.json();\n      setMapData(data);\n\n      // Load image dimensions\n      const img = new Image();\n      img.onload = () => {\n        setImageDimensions({\n          width: img.width,\n          height: img.height\n        });\n        initializeMap(img.width, img.height, data);\n      };\n      img.src = `http://localhost:3001/maps/${data.path}`;\n      if (onMapChange) onMapChange(data);\n    } catch (error) {\n      console.error('Error fetching map:', error);\n      navigate('/maps');\n    }\n  };\n  const fetchMarkers = async () => {\n    if (!selectedCampaign || !mapId) return;\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch markers');\n      const data = await response.json();\n      setMarkers(data);\n\n      // If map is already initialized, add markers\n      if (leafletMap) {\n        addMarkersToMap(data, leafletMap);\n      }\n    } catch (error) {\n      console.error('Error fetching markers:', error);\n    }\n  };\n  const createMarkerIcon = (color = '#FF0000') => {\n    return L.divIcon({\n      className: 'custom-marker',\n      html: `<div class=\"marker-icon\" style=\"color: ${color}\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"48\" viewBox=\"0 0 256 256\">\n          <path fill=\"currentColor\" d=\"M128,16a88.1,88.1,0,0,0-88,88c0,75.3,80,132.17,83.41,134.55a8,8,0,0,0,9.18,0C136,236.17,216,179.3,216,104A88.1,88.1,0,0,0,128,16Z\" stroke=\"rgba(0, 0, 0, 0.25)\" stroke-width=\"16\"/>\n        </svg>\n      </div>`,\n      iconSize: [32, 48],\n      iconAnchor: [16, 48],\n      popupAnchor: [0, -24]\n    });\n  };\n  const createPopupContent = (markerData, isNewMarker = false) => {\n    // Create popup content as a string instead of DOM elements\n    return `\n      <div class=\"marker-content\">\n        <form class=\"marker-form\" onsubmit=\"return false;\">\n          <input \n            type=\"text\" \n            name=\"label\" \n            value=\"${markerData.label || ''}\" \n            placeholder=\"Marker Label\" \n            class=\"marker-input\" \n            required\n          />\n          <textarea \n            name=\"description\" \n            placeholder=\"Description (optional)\" \n            class=\"marker-input\" \n            rows=\"2\"\n          >${markerData.description || ''}</textarea>\n          <select name=\"color\" class=\"marker-input\">\n            ${Object.entries(MARKER_COLORS).map(([value, label]) => `\n              <option value=\"${value}\" ${value === (markerData.color || '#FF0000') ? 'selected' : ''}>\n                ${label}\n              </option>\n            `).join('')}\n          </select>\n          <div class=\"marker-actions\">\n            <button type=\"button\" class=\"delete-button\" data-action=\"${isNewMarker ? 'cancel' : 'delete'}\">\n              ${isNewMarker ? 'Cancel' : 'Delete'}\n            </button>\n            <button type=\"button\" class=\"dnd-button\" data-action=\"${isNewMarker ? 'create' : 'update'}\">\n              ${isNewMarker ? 'Add Marker' : 'Save Changes'}\n            </button>\n          </div>\n        </form>\n      </div>\n    `;\n  };\n  const addMarkersToMap = (markersData, targetMap) => {\n    if (!targetMap) return;\n\n    // Clear existing permanent markers\n    targetMap.eachLayer(layer => {\n      if (layer instanceof L.Marker && layer.options.permanent) {\n        targetMap.removeLayer(layer);\n      }\n    });\n\n    // Add new markers\n    markersData.forEach(markerData => {\n      if (!markerData || typeof markerData.lat !== 'number' || typeof markerData.lng !== 'number') {\n        console.warn('Invalid marker data:', markerData);\n        return;\n      }\n      const marker = L.marker([markerData.lat, markerData.lng], {\n        icon: createMarkerIcon(markerData.color || '#FF0000'),\n        permanent: true\n      });\n      const popup = L.popup({\n        className: 'custom-popup',\n        closeButton: true,\n        autoClose: false,\n        closeOnClick: false\n      }).setContent(createPopupContent(markerData, false));\n      marker.bindPopup(popup);\n\n      // Add event listeners to the marker\n      marker.on('popupopen', e => {\n        const popup = e.popup;\n        const container = popup.getElement();\n        if (!container) return;\n\n        // Get form elements\n        const form = container.querySelector('form');\n        const deleteBtn = container.querySelector('[data-action=\"delete\"]');\n        const updateBtn = container.querySelector('[data-action=\"update\"]');\n\n        // Handle delete\n        if (deleteBtn) {\n          deleteBtn.onclick = async () => {\n            try {\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}?campaign_id=${selectedCampaign.id}`, {\n                method: 'DELETE'\n              });\n              if (!response.ok) throw new Error('Failed to delete marker');\n              setMarkers(prev => prev.filter(m => m.id !== markerData.id));\n              targetMap.removeLayer(marker);\n              marker.closePopup();\n            } catch (error) {\n              console.error('Error deleting marker:', error);\n            }\n          };\n        }\n\n        // Handle update\n        if (updateBtn) {\n          updateBtn.onclick = async () => {\n            const formData = new FormData(form);\n            const updatedMarker = {\n              ...markerData,\n              label: formData.get('label'),\n              description: formData.get('description'),\n              color: formData.get('color')\n            };\n            try {\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}`, {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  ...updatedMarker,\n                  campaign_id: selectedCampaign.id\n                })\n              });\n              if (!response.ok) throw new Error('Failed to update marker');\n              const savedMarker = await response.json();\n              setMarkers(prev => prev.map(m => m.id === savedMarker.id ? savedMarker : m));\n              marker.setIcon(createMarkerIcon(savedMarker.color));\n              marker.closePopup();\n            } catch (error) {\n              console.error('Error updating marker:', error);\n            }\n          };\n        }\n      });\n      marker.addTo(targetMap);\n    });\n  };\n  const initializeMap = (width, height, mapData) => {\n    if (!mapContainerRef.current) return;\n\n    // Clean up existing map\n    if (leafletMap) {\n      leafletMap.remove();\n    }\n    const bounds = [[0, 0], [height, width]];\n    const map = L.map(mapContainerRef.current, {\n      crs: L.CRS.Simple,\n      maxZoom: 2,\n      minZoom: -2,\n      maxBounds: bounds,\n      zoomControl: true\n    });\n    L.imageOverlay(`http://localhost:3001/maps/${mapData.path}`, bounds).addTo(map);\n    map.fitBounds(bounds);\n\n    // Add existing markers first\n    addMarkersToMap(markers, map);\n\n    // Set up click handler for new markers\n    map.on('click', e => {\n      if (!selectedCampaign || !mapId) return;\n      const {\n        lat,\n        lng\n      } = e.latlng;\n\n      // Remove any existing temporary markers\n      map.eachLayer(layer => {\n        if (layer instanceof L.Marker && !layer.options.permanent) {\n          map.removeLayer(layer);\n        }\n      });\n      const tempMarker = L.marker([lat, lng], {\n        icon: createMarkerIcon('#FF0000'),\n        permanent: false\n      });\n      const tempMarkerData = {\n        lat,\n        lng,\n        label: '',\n        description: '',\n        color: '#FF0000'\n      };\n      const popup = L.popup({\n        className: 'custom-popup',\n        closeButton: true,\n        autoClose: false,\n        closeOnClick: false\n      }).setContent(createPopupContent(tempMarkerData, true));\n      tempMarker.bindPopup(popup);\n\n      // Add event listeners when popup opens\n      tempMarker.on('popupopen', e => {\n        const popup = e.popup;\n        const container = popup.getElement();\n        if (!container) return;\n\n        // Get form elements\n        const form = container.querySelector('form');\n        const cancelBtn = container.querySelector('[data-action=\"cancel\"]');\n        const createBtn = container.querySelector('[data-action=\"create\"]');\n\n        // Handle cancel\n        if (cancelBtn) {\n          cancelBtn.onclick = () => {\n            map.removeLayer(tempMarker);\n          };\n        }\n\n        // Handle create\n        if (createBtn) {\n          createBtn.onclick = async () => {\n            const formData = new FormData(form);\n            const newMarker = {\n              ...tempMarkerData,\n              label: formData.get('label'),\n              description: formData.get('description'),\n              color: formData.get('color')\n            };\n            try {\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  ...newMarker,\n                  campaign_id: selectedCampaign.id\n                })\n              });\n              if (!response.ok) throw new Error('Failed to create marker');\n              const savedMarker = await response.json();\n              setMarkers(prev => [...prev, savedMarker]);\n              map.removeLayer(tempMarker);\n              addMarkersToMap([savedMarker], map);\n            } catch (error) {\n              console.error('Error creating marker:', error);\n            }\n          };\n        }\n      });\n      tempMarker.addTo(map).openPopup();\n    });\n    setLeafletMap(map);\n  };\n  const handleMarkerCreate = () => {};\n  const handleMarkerUpdate = () => {};\n  const handleMarkerDelete = () => {};\n  const handleMarkerEdit = () => {};\n  if (!mapData || !imageDimensions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: 0,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: mapData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"more\",\n        \"aria-controls\": \"map-menu\",\n        \"aria-haspopup\": \"true\",\n        onClick: e => setMenuAnchorEl(e.currentTarget),\n        style: {\n          marginLeft: '8px',\n          color: '#111827'\n        },\n        children: /*#__PURE__*/_jsxDEV(DotsThreeVertical, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"map-menu\",\n      anchorEl: menuAnchorEl,\n      keepMounted: true,\n      open: Boolean(menuAnchorEl),\n      onClose: () => setMenuAnchorEl(null),\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => setMenuAnchorEl(null),\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => setMenuAnchorEl(null),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      style: {\n        height: 'calc(100vh - 80px)',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n};\n_s(Maps, \"OjWqTVU51Qn5rNbBcA8BOJ/wSFc=\", false, function () {\n  return [useParams, useNavigate, useCampaign];\n});\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","L","useCampaign","IconButton","Menu","MenuItem","DotsThreeVertical","jsxDEV","_jsxDEV","MARKER_COLORS","Maps","onMapChange","_s","id","mapId","navigate","map","setMap","leafletMap","setLeafletMap","mapData","setMapData","markers","setMarkers","menuAnchorEl","setMenuAnchorEl","imageDimensions","setImageDimensions","selectedCampaign","mapContainerRef","useRef","fetchMap","fetchMarkers","response","fetch","ok","Error","data","json","img","Image","onload","width","height","initializeMap","src","path","error","console","addMarkersToMap","createMarkerIcon","color","divIcon","className","html","iconSize","iconAnchor","popupAnchor","createPopupContent","markerData","isNewMarker","label","description","Object","entries","value","join","markersData","targetMap","eachLayer","layer","Marker","options","permanent","removeLayer","forEach","lat","lng","warn","marker","icon","popup","closeButton","autoClose","closeOnClick","setContent","bindPopup","on","e","container","getElement","form","querySelector","deleteBtn","updateBtn","onclick","method","prev","filter","m","closePopup","formData","FormData","updatedMarker","get","headers","body","JSON","stringify","campaign_id","savedMarker","setIcon","addTo","current","remove","bounds","crs","CRS","Simple","maxZoom","minZoom","maxBounds","zoomControl","imageOverlay","fitBounds","latlng","tempMarker","tempMarkerData","cancelBtn","createBtn","newMarker","openPopup","handleMarkerCreate","handleMarkerUpdate","handleMarkerDelete","handleMarkerEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","alignItems","padding","margin","name","onClick","currentTarget","marginLeft","size","anchorEl","keepMounted","open","Boolean","onClose","ref","_c","$RefreshReg$"],"sources":["/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/Maps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Maps.css';\nimport { useCampaign } from '../contexts/CampaignContext';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { DotsThreeVertical } from \"@phosphor-icons/react\";\n\n// Marker configuration\nconst MARKER_COLORS = {\n  '#FF0000': 'Red',\n  '#00FF00': 'Green',\n  '#0000FF': 'Blue',\n  '#FFFF00': 'Yellow',\n  '#FF00FF': 'Magenta',\n  '#00FFFF': 'Cyan',\n  '#000000': 'Black'\n};\n\nconst Maps = ({ onMapChange }) => {\n  const { id: mapId } = useParams();\n  const navigate = useNavigate();\n  const [map, setMap] = useState(null);\n  const [leafletMap, setLeafletMap] = useState(null);\n  const [mapData, setMapData] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState(null);\n  const { selectedCampaign } = useCampaign();\n  const mapContainerRef = React.useRef(null);\n\n  // Fetch map data\n  useEffect(() => {\n    if (selectedCampaign && mapId) {\n      fetchMap();\n      fetchMarkers();\n    }\n  }, [mapId, selectedCampaign]);\n\n  const fetchMap = async () => {\n    if (!selectedCampaign) return;\n    \n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch map');\n      const data = await response.json();\n      setMapData(data);\n      \n      // Load image dimensions\n      const img = new Image();\n      img.onload = () => {\n        setImageDimensions({ width: img.width, height: img.height });\n        initializeMap(img.width, img.height, data);\n      };\n      img.src = `http://localhost:3001/maps/${data.path}`;\n      \n      if (onMapChange) onMapChange(data);\n    } catch (error) {\n      console.error('Error fetching map:', error);\n      navigate('/maps');\n    }\n  };\n\n  const fetchMarkers = async () => {\n    if (!selectedCampaign || !mapId) return;\n    \n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch markers');\n      const data = await response.json();\n      setMarkers(data);\n      \n      // If map is already initialized, add markers\n      if (leafletMap) {\n        addMarkersToMap(data, leafletMap);\n      }\n    } catch (error) {\n      console.error('Error fetching markers:', error);\n    }\n  };\n\n  const createMarkerIcon = (color = '#FF0000') => {\n    return L.divIcon({\n      className: 'custom-marker',\n      html: `<div class=\"marker-icon\" style=\"color: ${color}\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"48\" viewBox=\"0 0 256 256\">\n          <path fill=\"currentColor\" d=\"M128,16a88.1,88.1,0,0,0-88,88c0,75.3,80,132.17,83.41,134.55a8,8,0,0,0,9.18,0C136,236.17,216,179.3,216,104A88.1,88.1,0,0,0,128,16Z\" stroke=\"rgba(0, 0, 0, 0.25)\" stroke-width=\"16\"/>\n        </svg>\n      </div>`,\n      iconSize: [32, 48],\n      iconAnchor: [16, 48],\n      popupAnchor: [0, -24]\n    });\n  };\n\n  const createPopupContent = (markerData, isNewMarker = false) => {\n    // Create popup content as a string instead of DOM elements\n    return `\n      <div class=\"marker-content\">\n        <form class=\"marker-form\" onsubmit=\"return false;\">\n          <input \n            type=\"text\" \n            name=\"label\" \n            value=\"${markerData.label || ''}\" \n            placeholder=\"Marker Label\" \n            class=\"marker-input\" \n            required\n          />\n          <textarea \n            name=\"description\" \n            placeholder=\"Description (optional)\" \n            class=\"marker-input\" \n            rows=\"2\"\n          >${markerData.description || ''}</textarea>\n          <select name=\"color\" class=\"marker-input\">\n            ${Object.entries(MARKER_COLORS).map(([value, label]) => `\n              <option value=\"${value}\" ${value === (markerData.color || '#FF0000') ? 'selected' : ''}>\n                ${label}\n              </option>\n            `).join('')}\n          </select>\n          <div class=\"marker-actions\">\n            <button type=\"button\" class=\"delete-button\" data-action=\"${isNewMarker ? 'cancel' : 'delete'}\">\n              ${isNewMarker ? 'Cancel' : 'Delete'}\n            </button>\n            <button type=\"button\" class=\"dnd-button\" data-action=\"${isNewMarker ? 'create' : 'update'}\">\n              ${isNewMarker ? 'Add Marker' : 'Save Changes'}\n            </button>\n          </div>\n        </form>\n      </div>\n    `;\n  };\n\n  const addMarkersToMap = (markersData, targetMap) => {\n    if (!targetMap) return;\n\n    // Clear existing permanent markers\n    targetMap.eachLayer((layer) => {\n      if (layer instanceof L.Marker && layer.options.permanent) {\n        targetMap.removeLayer(layer);\n      }\n    });\n\n    // Add new markers\n    markersData.forEach(markerData => {\n      if (!markerData || typeof markerData.lat !== 'number' || typeof markerData.lng !== 'number') {\n        console.warn('Invalid marker data:', markerData);\n        return;\n      }\n\n      const marker = L.marker([markerData.lat, markerData.lng], {\n        icon: createMarkerIcon(markerData.color || '#FF0000'),\n        permanent: true\n      });\n\n      const popup = L.popup({\n        className: 'custom-popup',\n        closeButton: true,\n        autoClose: false,\n        closeOnClick: false\n      }).setContent(createPopupContent(markerData, false));\n\n      marker.bindPopup(popup);\n      \n      // Add event listeners to the marker\n      marker.on('popupopen', (e) => {\n        const popup = e.popup;\n        const container = popup.getElement();\n        if (!container) return;\n\n        // Get form elements\n        const form = container.querySelector('form');\n        const deleteBtn = container.querySelector('[data-action=\"delete\"]');\n        const updateBtn = container.querySelector('[data-action=\"update\"]');\n\n        // Handle delete\n        if (deleteBtn) {\n          deleteBtn.onclick = async () => {\n            try {\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}?campaign_id=${selectedCampaign.id}`, {\n                method: 'DELETE',\n              });\n              \n              if (!response.ok) throw new Error('Failed to delete marker');\n              \n              setMarkers(prev => prev.filter(m => m.id !== markerData.id));\n              targetMap.removeLayer(marker);\n              marker.closePopup();\n            } catch (error) {\n              console.error('Error deleting marker:', error);\n            }\n          };\n        }\n\n        // Handle update\n        if (updateBtn) {\n          updateBtn.onclick = async () => {\n            const formData = new FormData(form);\n            const updatedMarker = {\n              ...markerData,\n              label: formData.get('label'),\n              description: formData.get('description'),\n              color: formData.get('color')\n            };\n\n            try {\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                  ...updatedMarker,\n                  campaign_id: selectedCampaign.id\n                }),\n              });\n\n              if (!response.ok) throw new Error('Failed to update marker');\n              const savedMarker = await response.json();\n              \n              setMarkers(prev => prev.map(m => m.id === savedMarker.id ? savedMarker : m));\n              marker.setIcon(createMarkerIcon(savedMarker.color));\n              marker.closePopup();\n            } catch (error) {\n              console.error('Error updating marker:', error);\n            }\n          };\n        }\n      });\n\n      marker.addTo(targetMap);\n    });\n  };\n\n  const initializeMap = (width, height, mapData) => {\n    if (!mapContainerRef.current) return;\n\n    // Clean up existing map\n    if (leafletMap) {\n      leafletMap.remove();\n    }\n\n    const bounds = [[0, 0], [height, width]];\n    const map = L.map(mapContainerRef.current, {\n      crs: L.CRS.Simple,\n      maxZoom: 2,\n      minZoom: -2,\n      maxBounds: bounds,\n      zoomControl: true\n    });\n\n    L.imageOverlay(`http://localhost:3001/maps/${mapData.path}`, bounds).addTo(map);\n    map.fitBounds(bounds);\n\n    // Add existing markers first\n    addMarkersToMap(markers, map);\n\n    // Set up click handler for new markers\n    map.on('click', (e) => {\n      if (!selectedCampaign || !mapId) return;\n\n      const { lat, lng } = e.latlng;\n      \n      // Remove any existing temporary markers\n      map.eachLayer((layer) => {\n        if (layer instanceof L.Marker && !layer.options.permanent) {\n          map.removeLayer(layer);\n        }\n      });\n\n      const tempMarker = L.marker([lat, lng], {\n        icon: createMarkerIcon('#FF0000'),\n        permanent: false\n      });\n\n      const tempMarkerData = {\n        lat,\n        lng,\n        label: '',\n        description: '',\n        color: '#FF0000'\n      };\n\n      const popup = L.popup({\n        className: 'custom-popup',\n        closeButton: true,\n        autoClose: false,\n        closeOnClick: false\n      }).setContent(createPopupContent(tempMarkerData, true));\n\n      tempMarker.bindPopup(popup);\n      \n      // Add event listeners when popup opens\n      tempMarker.on('popupopen', (e) => {\n        const popup = e.popup;\n        const container = popup.getElement();\n        if (!container) return;\n\n        // Get form elements\n        const form = container.querySelector('form');\n        const cancelBtn = container.querySelector('[data-action=\"cancel\"]');\n        const createBtn = container.querySelector('[data-action=\"create\"]');\n\n        // Handle cancel\n        if (cancelBtn) {\n          cancelBtn.onclick = () => {\n            map.removeLayer(tempMarker);\n          };\n        }\n\n        // Handle create\n        if (createBtn) {\n          createBtn.onclick = async () => {\n            const formData = new FormData(form);\n            const newMarker = {\n              ...tempMarkerData,\n              label: formData.get('label'),\n              description: formData.get('description'),\n              color: formData.get('color')\n            };\n\n            try {\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                  ...newMarker,\n                  campaign_id: selectedCampaign.id\n                }),\n              });\n\n              if (!response.ok) throw new Error('Failed to create marker');\n              const savedMarker = await response.json();\n              \n              setMarkers(prev => [...prev, savedMarker]);\n              map.removeLayer(tempMarker);\n              addMarkersToMap([savedMarker], map);\n            } catch (error) {\n              console.error('Error creating marker:', error);\n            }\n          };\n        }\n      });\n\n      tempMarker.addTo(map).openPopup();\n    });\n\n    setLeafletMap(map);\n  };\n\n  const handleMarkerCreate = () => {};\n  const handleMarkerUpdate = () => {};\n  const handleMarkerDelete = () => {};\n  const handleMarkerEdit = () => {};\n\n  if (!mapData || !imageDimensions) {\n    return <div>Loading map...</div>;\n  }\n\n  return (\n    <div className=\"map-container\">\n      <div style={{ display: 'flex', alignItems: 'center', padding: '0 16px' }}>\n        <h2 style={{ margin: 0, display: 'flex', alignItems: 'center' }}>{mapData.name}</h2>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"map-menu\"\n          aria-haspopup=\"true\"\n          onClick={(e) => setMenuAnchorEl(e.currentTarget)}\n          style={{ marginLeft: '8px', color: '#111827' }}\n        >\n          <DotsThreeVertical size={24} />\n        </IconButton>\n      </div>\n\n      <Menu\n        id=\"map-menu\"\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={() => setMenuAnchorEl(null)}\n      >\n        <MenuItem onClick={() => setMenuAnchorEl(null)}>Rename</MenuItem>\n        <MenuItem onClick={() => setMenuAnchorEl(null)}>Delete</MenuItem>\n      </Menu>\n\n      <div ref={mapContainerRef} style={{ height: 'calc(100vh - 80px)', width: '100%' }} />\n    </div>\n  );\n};\n\nexport default Maps;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}