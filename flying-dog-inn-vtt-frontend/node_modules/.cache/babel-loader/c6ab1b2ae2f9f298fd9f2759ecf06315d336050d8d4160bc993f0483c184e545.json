{"ast":null,"code":"var _jsxFileName = \"/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/Log.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useCampaign } from '../contexts/CampaignContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Log = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const limit = 50;\n  const observer = useRef();\n  const refreshInterval = useRef();\n  const {\n    selectedCampaign\n  } = useCampaign();\n  const lastLogElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setOffset(prevOffset => prevOffset + limit);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  const fetchLogs = async () => {\n    if (!selectedCampaign) return;\n    try {\n      setLoading(true);\n      const response = await fetch(`http://localhost:3001/api/logs?campaign_id=${selectedCampaign.id}&limit=${limit}&offset=${offset}`);\n      if (!response.ok) throw new Error('Failed to fetch logs');\n      const data = await response.json();\n      setLogs(prevLogs => {\n        const newLogs = offset === 0 ? data : [...prevLogs, ...data];\n        return newLogs;\n      });\n      setHasMore(data.length === limit);\n    } catch (error) {\n      console.error('Error fetching logs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset logs and offset when campaign changes\n  useEffect(() => {\n    setLogs([]);\n    setOffset(0);\n    setHasMore(true);\n    if (selectedCampaign) {\n      fetchLogs();\n    }\n\n    // Set up refresh interval\n    if (selectedCampaign) {\n      refreshInterval.current = setInterval(() => {\n        setOffset(0);\n      }, 10000);\n      return () => {\n        if (refreshInterval.current) {\n          clearInterval(refreshInterval.current);\n        }\n      };\n    }\n  }, [selectedCampaign === null || selectedCampaign === void 0 ? void 0 : selectedCampaign.id]); // Add .id to ensure it updates when campaign changes\n\n  // Fetch more logs when offset changes\n  useEffect(() => {\n    if (selectedCampaign && offset > 0) {\n      fetchLogs();\n    }\n  }, [offset, selectedCampaign === null || selectedCampaign === void 0 ? void 0 : selectedCampaign.id]);\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleString();\n  };\n  const getActionIcon = action_type => {\n    switch (action_type) {\n      case 'CREATE':\n        return '➕';\n      case 'UPDATE':\n        return '✏️';\n      case 'DELETE':\n        return '🗑️';\n      case 'REORDER':\n        return '↕️';\n      default:\n        return '•';\n    }\n  };\n  const getActionColor = action_type => {\n    switch (action_type) {\n      case 'CREATE':\n        return '#2D7A4C';\n      // Deep forest green\n      case 'UPDATE':\n        return '#8B4513';\n      // Saddle brown\n      case 'DELETE':\n        return '#8B0000';\n      // Dark red\n      case 'REORDER':\n        return '#4B0082';\n      // Indigo\n      default:\n        return '#483C32';\n      // Dark taupe\n    }\n  };\n  const formatActionName = log => {\n    const entityMap = {\n      'map': 'Map',\n      'marker': 'Marker',\n      'timeline_event': 'Timeline Event',\n      'campaign': 'Campaign'\n    };\n    if (log.details) {\n      // Extract the name from the details if it exists (in quotes)\n      const nameMatch = log.details.match(/\"([^\"]+)\"/);\n      return nameMatch ? nameMatch[1] : log.details;\n    }\n    return `${entityMap[log.entity_type] || log.entity_type} ${log.entity_id}`;\n  };\n  const formatActionLocation = log => {\n    var _log$details, _log$details$match;\n    switch (log.entity_type) {\n      case 'map':\n        return 'Maps';\n      case 'marker':\n        return `Map ${((_log$details = log.details) === null || _log$details === void 0 ? void 0 : (_log$details$match = _log$details.match(/map (\\d+)/)) === null || _log$details$match === void 0 ? void 0 : _log$details$match[1]) || ''}`;\n      case 'timeline_event':\n        return 'Timeline';\n      case 'campaign':\n        return 'Campaign Settings';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '24px',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      width: 'calc(100vw - 296px)',\n      boxSizing: 'border-box',\n      background: '#F5E6D3',\n      position: 'fixed',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      overflowY: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginLeft: '32px'\n      },\n      children: \"Campaign Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'white',\n        borderRadius: '16px',\n        padding: '24px',\n        margin: '32px',\n        boxShadow: '0 4px 6px rgba(44, 24, 16, 0.1)',\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        minHeight: 0,\n        position: 'relative',\n        overflowY: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '24px',\n          left: '24px',\n          right: '24px',\n          bottom: '24px',\n          overflowY: 'auto',\n          overflowX: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: '100%',\n            borderCollapse: 'separate',\n            borderSpacing: 0,\n            tableLayout: 'fixed'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n            children: [/*#__PURE__*/_jsxDEV(\"col\", {\n              style: {\n                width: '120px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              style: {\n                width: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              style: {\n                width: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              style: {\n                width: '180px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 24px 12px 12px',\n                  borderBottom: '2px solid #8B4513',\n                  color: '#2C1810',\n                  fontWeight: '600',\n                  backgroundColor: '#DEB887',\n                  // Burlywood\n                  position: 'sticky',\n                  top: 0,\n                  zIndex: 1,\n                  fontFamily: '\"Crimson Text\", serif',\n                  fontSize: '16px'\n                },\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 24px',\n                  borderBottom: '2px solid #8B4513',\n                  color: '#2C1810',\n                  fontWeight: '600',\n                  backgroundColor: '#DEB887',\n                  position: 'sticky',\n                  top: 0,\n                  zIndex: 1,\n                  fontFamily: '\"Crimson Text\", serif',\n                  fontSize: '16px'\n                },\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 24px',\n                  borderBottom: '2px solid #8B4513',\n                  color: '#2C1810',\n                  fontWeight: '600',\n                  backgroundColor: '#DEB887',\n                  position: 'sticky',\n                  top: 0,\n                  zIndex: 1,\n                  fontFamily: '\"Crimson Text\", serif',\n                  fontSize: '16px'\n                },\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 24px',\n                  borderBottom: '2px solid #8B4513',\n                  color: '#2C1810',\n                  fontWeight: '600',\n                  backgroundColor: '#DEB887',\n                  position: 'sticky',\n                  top: 0,\n                  zIndex: 1,\n                  fontFamily: '\"Crimson Text\", serif',\n                  fontSize: '16px'\n                },\n                children: \"Date & Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: logs.length === 0 && !loading ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"4\",\n                style: {\n                  padding: '24px',\n                  textAlign: 'center',\n                  color: '#483C32',\n                  fontStyle: 'italic'\n                },\n                children: \"No actions logged in the chronicles yet...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this) : logs.map((log, index) => {\n              const isLastElement = index === logs.length - 1;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                ref: isLastElement ? lastLogElementRef : null,\n                style: {\n                  borderBottom: '1px solid rgba(139, 69, 19, 0.2)',\n                  backgroundColor: index % 2 === 0 ? 'transparent' : 'rgba(139, 69, 19, 0.05)'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    padding: '12px',\n                    color: getActionColor(log.action_type),\n                    fontWeight: '500',\n                    whiteSpace: 'nowrap',\n                    fontFamily: '\"Crimson Text\", serif'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginRight: '8px'\n                    },\n                    children: getActionIcon(log.action_type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 25\n                  }, this), log.action_type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    padding: '12px 24px',\n                    color: '#2C1810',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                    fontFamily: '\"Crimson Text\", serif'\n                  },\n                  children: formatActionName(log)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    padding: '12px 24px',\n                    color: '#483C32',\n                    fontFamily: '\"Crimson Text\", serif'\n                  },\n                  children: formatActionLocation(log)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    padding: '12px 24px',\n                    color: '#483C32',\n                    whiteSpace: 'nowrap',\n                    fontFamily: '\"Crimson Text\", serif'\n                  },\n                  children: formatTimestamp(log.created_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this)]\n              }, log.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          right: 0,\n          padding: '12px 0',\n          textAlign: 'center',\n          color: '#483C32',\n          fontStyle: 'italic',\n          fontFamily: '\"Crimson Text\", serif',\n          background: 'linear-gradient(transparent, white)'\n        },\n        children: \"Consulting the archives...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Log, \"py2DVTlUDkwEH0HjBAUQNk8xApI=\", false, function () {\n  return [useCampaign];\n});\n_c = Log;\nexport default Log;\nvar _c;\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useCampaign","jsxDEV","_jsxDEV","Log","_s","logs","setLogs","loading","setLoading","hasMore","setHasMore","offset","setOffset","limit","observer","refreshInterval","selectedCampaign","lastLogElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevOffset","observe","fetchLogs","response","fetch","id","ok","Error","data","json","prevLogs","newLogs","length","error","console","setInterval","clearInterval","formatTimestamp","timestamp","date","Date","toLocaleString","getActionIcon","action_type","getActionColor","formatActionName","log","entityMap","details","nameMatch","match","entity_type","entity_id","formatActionLocation","_log$details","_log$details$match","style","padding","display","flexDirection","height","width","boxSizing","background","position","top","right","bottom","overflowY","children","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","borderRadius","margin","boxShadow","flex","minHeight","left","overflowX","borderCollapse","borderSpacing","tableLayout","textAlign","borderBottom","color","fontWeight","backgroundColor","zIndex","fontFamily","fontSize","colSpan","fontStyle","map","index","isLastElement","ref","whiteSpace","marginRight","overflow","textOverflow","created_at","_c","$RefreshReg$"],"sources":["/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/Log.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useCampaign } from '../contexts/CampaignContext';\n\nconst Log = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const limit = 50;\n  const observer = useRef();\n  const refreshInterval = useRef();\n  const { selectedCampaign } = useCampaign();\n\n  const lastLogElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setOffset(prevOffset => prevOffset + limit);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const fetchLogs = async () => {\n    if (!selectedCampaign) return;\n\n    try {\n      setLoading(true);\n      const response = await fetch(\n        `http://localhost:3001/api/logs?campaign_id=${selectedCampaign.id}&limit=${limit}&offset=${offset}`\n      );\n      if (!response.ok) throw new Error('Failed to fetch logs');\n      const data = await response.json();\n      \n      setLogs(prevLogs => {\n        const newLogs = offset === 0 ? data : [...prevLogs, ...data];\n        return newLogs;\n      });\n      setHasMore(data.length === limit);\n    } catch (error) {\n      console.error('Error fetching logs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset logs and offset when campaign changes\n  useEffect(() => {\n    setLogs([]);\n    setOffset(0);\n    setHasMore(true);\n    if (selectedCampaign) {\n      fetchLogs();\n    }\n    \n    // Set up refresh interval\n    if (selectedCampaign) {\n      refreshInterval.current = setInterval(() => {\n        setOffset(0);\n      }, 10000);\n\n      return () => {\n        if (refreshInterval.current) {\n          clearInterval(refreshInterval.current);\n        }\n      };\n    }\n  }, [selectedCampaign?.id]); // Add .id to ensure it updates when campaign changes\n\n  // Fetch more logs when offset changes\n  useEffect(() => {\n    if (selectedCampaign && offset > 0) {\n      fetchLogs();\n    }\n  }, [offset, selectedCampaign?.id]);\n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleString();\n  };\n\n  const getActionIcon = (action_type) => {\n    switch (action_type) {\n      case 'CREATE':\n        return '➕';\n      case 'UPDATE':\n        return '✏️';\n      case 'DELETE':\n        return '🗑️';\n      case 'REORDER':\n        return '↕️';\n      default:\n        return '•';\n    }\n  };\n\n  const getActionColor = (action_type) => {\n    switch (action_type) {\n      case 'CREATE':\n        return '#2D7A4C'; // Deep forest green\n      case 'UPDATE':\n        return '#8B4513'; // Saddle brown\n      case 'DELETE':\n        return '#8B0000'; // Dark red\n      case 'REORDER':\n        return '#4B0082'; // Indigo\n      default:\n        return '#483C32'; // Dark taupe\n    }\n  };\n\n  const formatActionName = (log) => {\n    const entityMap = {\n      'map': 'Map',\n      'marker': 'Marker',\n      'timeline_event': 'Timeline Event',\n      'campaign': 'Campaign'\n    };\n\n    if (log.details) {\n      // Extract the name from the details if it exists (in quotes)\n      const nameMatch = log.details.match(/\"([^\"]+)\"/);\n      return nameMatch ? nameMatch[1] : log.details;\n    }\n\n    return `${entityMap[log.entity_type] || log.entity_type} ${log.entity_id}`;\n  };\n\n  const formatActionLocation = (log) => {\n    switch (log.entity_type) {\n      case 'map':\n        return 'Maps';\n      case 'marker':\n        return `Map ${log.details?.match(/map (\\d+)/)?.[1] || ''}`;\n      case 'timeline_event':\n        return 'Timeline';\n      case 'campaign':\n        return 'Campaign Settings';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div style={{\n      padding: '24px',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      width: 'calc(100vw - 296px)',\n      boxSizing: 'border-box',\n      background: '#F5E6D3',\n      position: 'fixed',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      overflowY: 'hidden'\n    }}>\n      <h2 style={{ marginLeft: '32px' }}>Campaign Log</h2>\n      \n      <div style={{\n        background: 'white',\n        borderRadius: '16px',\n        padding: '24px',\n        margin: '32px',\n        boxShadow: '0 4px 6px rgba(44, 24, 16, 0.1)',\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        minHeight: 0,\n        position: 'relative',\n        overflowY: 'hidden'\n      }}>\n        <div style={{\n          position: 'absolute',\n          top: '24px',\n          left: '24px',\n          right: '24px',\n          bottom: '24px',\n          overflowY: 'auto',\n          overflowX: 'auto'\n        }}>\n          <table style={{ \n            width: '100%', \n            borderCollapse: 'separate', \n            borderSpacing: 0,\n            tableLayout: 'fixed'\n          }}>\n            <colgroup>\n              <col style={{ width: '120px' }} />\n              <col style={{ width: 'auto' }} />\n              <col style={{ width: '200px' }} />\n              <col style={{ width: '180px' }} />\n            </colgroup>\n            <thead>\n              <tr>\n                <th style={{\n                  textAlign: 'left',\n                  padding: '12px 24px 12px 12px',\n                  borderBottom: '2px solid #8B4513',\n                  color: '#2C1810',\n                  fontWeight: '600',\n                  backgroundColor: '#DEB887', // Burlywood\n                  position: 'sticky',\n                  top: 0,\n                  zIndex: 1,\n                  fontFamily: '\"Crimson Text\", serif',\n                  fontSize: '16px'\n                }}>Action</th>\n                <th style={{\n                  textAlign: 'left',\n                  padding: '12px 24px',\n                  borderBottom: '2px solid #8B4513',\n                  color: '#2C1810',\n                  fontWeight: '600',\n                  backgroundColor: '#DEB887',\n                  position: 'sticky',\n                  top: 0,\n                  zIndex: 1,\n                  fontFamily: '\"Crimson Text\", serif',\n                  fontSize: '16px'\n                }}>Name</th>\n                <th style={{\n                  textAlign: 'left',\n                  padding: '12px 24px',\n                  borderBottom: '2px solid #8B4513',\n                  color: '#2C1810',\n                  fontWeight: '600',\n                  backgroundColor: '#DEB887',\n                  position: 'sticky',\n                  top: 0,\n                  zIndex: 1,\n                  fontFamily: '\"Crimson Text\", serif',\n                  fontSize: '16px'\n                }}>Location</th>\n                <th style={{\n                  textAlign: 'left',\n                  padding: '12px 24px',\n                  borderBottom: '2px solid #8B4513',\n                  color: '#2C1810',\n                  fontWeight: '600',\n                  backgroundColor: '#DEB887',\n                  position: 'sticky',\n                  top: 0,\n                  zIndex: 1,\n                  fontFamily: '\"Crimson Text\", serif',\n                  fontSize: '16px'\n                }}>Date & Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {logs.length === 0 && !loading ? (\n                <tr>\n                  <td colSpan=\"4\" style={{\n                    padding: '24px',\n                    textAlign: 'center',\n                    color: '#483C32',\n                    fontStyle: 'italic'\n                  }}>\n                    No actions logged in the chronicles yet...\n                  </td>\n                </tr>\n              ) : (\n                logs.map((log, index) => {\n                  const isLastElement = index === logs.length - 1;\n                  return (\n                    <tr\n                      key={log.id}\n                      ref={isLastElement ? lastLogElementRef : null}\n                      style={{\n                        borderBottom: '1px solid rgba(139, 69, 19, 0.2)',\n                        backgroundColor: index % 2 === 0 ? 'transparent' : 'rgba(139, 69, 19, 0.05)'\n                      }}\n                    >\n                      <td style={{\n                        padding: '12px',\n                        color: getActionColor(log.action_type),\n                        fontWeight: '500',\n                        whiteSpace: 'nowrap',\n                        fontFamily: '\"Crimson Text\", serif'\n                      }}>\n                        <span style={{ marginRight: '8px' }}>{getActionIcon(log.action_type)}</span>\n                        {log.action_type}\n                      </td>\n                      <td style={{\n                        padding: '12px 24px',\n                        color: '#2C1810',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        fontFamily: '\"Crimson Text\", serif'\n                      }}>\n                        {formatActionName(log)}\n                      </td>\n                      <td style={{\n                        padding: '12px 24px',\n                        color: '#483C32',\n                        fontFamily: '\"Crimson Text\", serif'\n                      }}>\n                        {formatActionLocation(log)}\n                      </td>\n                      <td style={{\n                        padding: '12px 24px',\n                        color: '#483C32',\n                        whiteSpace: 'nowrap',\n                        fontFamily: '\"Crimson Text\", serif'\n                      }}>\n                        {formatTimestamp(log.created_at)}\n                      </td>\n                    </tr>\n                  );\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n        {loading && (\n          <div style={{\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            padding: '12px 0',\n            textAlign: 'center',\n            color: '#483C32',\n            fontStyle: 'italic',\n            fontFamily: '\"Crimson Text\", serif',\n            background: 'linear-gradient(transparent, white)'\n          }}>\n            Consulting the archives...\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Log; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}