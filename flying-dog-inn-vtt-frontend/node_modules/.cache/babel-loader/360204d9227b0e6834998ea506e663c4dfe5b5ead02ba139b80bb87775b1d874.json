{"ast":null,"code":"var _jsxFileName = \"/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/CampaignLoadingOverlay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BeerStein } from \"@phosphor-icons/react\";\nimport './CampaignLoadingOverlay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadingPhrases = ['Swapping campaigns', 'Preparing maps and logs', 'Retreiving treasure', 'How do you want to do this?'];\nconst CampaignLoadingOverlay = ({\n  isVisible,\n  onLoadComplete\n}) => {\n  _s();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isExiting, setIsExiting] = useState(false);\n  useEffect(() => {\n    if (!isVisible) {\n      setCurrentPhraseIndex(0);\n      setProgress(0);\n      setIsExiting(false);\n      return;\n    }\n\n    // Rotate through phrases\n    const phraseInterval = setInterval(() => {\n      setCurrentPhraseIndex(prev => {\n        if (prev >= loadingPhrases.length - 1) {\n          clearInterval(phraseInterval);\n          return prev;\n        }\n        return prev + 1;\n      });\n    }, 2000);\n\n    // Progress bar animation\n    let startTime = Date.now();\n    const duration = 8000; // 8 seconds total\n\n    const progressInterval = setInterval(() => {\n      const elapsed = Date.now() - startTime;\n      const newProgress = Math.min(elapsed / duration * 100, 100);\n      setProgress(newProgress);\n      if (newProgress >= 100) {\n        clearInterval(progressInterval);\n        setIsExiting(true);\n        setTimeout(() => {\n          onLoadComplete();\n        }, 1000); // Wait for exit animation\n      }\n    }, 50);\n    return () => {\n      clearInterval(phraseInterval);\n      clearInterval(progressInterval);\n    };\n  }, [isVisible, onLoadComplete]);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `campaign-loading-overlay ${isExiting ? 'exiting' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"campaign-loading-content\",\n      children: [/*#__PURE__*/_jsxDEV(BeerStein, {\n        weight: \"regular\",\n        size: 64,\n        className: \"campaign-loading-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campaign-loading-phrases\",\n        children: loadingPhrases.map((phrase, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `campaign-loading-phrase ${index === currentPhraseIndex ? 'active' : ''}`,\n          children: phrase\n        }, phrase, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campaign-loading-progress-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campaign-loading-progress-bar\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(CampaignLoadingOverlay, \"KBMZvuvyvb9GWlCzUxOR3vn2YX4=\");\n_c = CampaignLoadingOverlay;\nexport default CampaignLoadingOverlay;\nvar _c;\n$RefreshReg$(_c, \"CampaignLoadingOverlay\");","map":{"version":3,"names":["React","useState","useEffect","BeerStein","jsxDEV","_jsxDEV","loadingPhrases","CampaignLoadingOverlay","isVisible","onLoadComplete","_s","currentPhraseIndex","setCurrentPhraseIndex","progress","setProgress","isExiting","setIsExiting","phraseInterval","setInterval","prev","length","clearInterval","startTime","Date","now","duration","progressInterval","elapsed","newProgress","Math","min","setTimeout","className","children","weight","size","fileName","_jsxFileName","lineNumber","columnNumber","map","phrase","index","style","width","_c","$RefreshReg$"],"sources":["/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/CampaignLoadingOverlay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BeerStein } from \"@phosphor-icons/react\";\nimport './CampaignLoadingOverlay.css';\n\nconst loadingPhrases = [\n  'Swapping campaigns',\n  'Preparing maps and logs',\n  'Retreiving treasure',\n  'How do you want to do this?'\n];\n\nconst CampaignLoadingOverlay = ({ isVisible, onLoadComplete }) => {\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isExiting, setIsExiting] = useState(false);\n\n  useEffect(() => {\n    if (!isVisible) {\n      setCurrentPhraseIndex(0);\n      setProgress(0);\n      setIsExiting(false);\n      return;\n    }\n\n    // Rotate through phrases\n    const phraseInterval = setInterval(() => {\n      setCurrentPhraseIndex(prev => {\n        if (prev >= loadingPhrases.length - 1) {\n          clearInterval(phraseInterval);\n          return prev;\n        }\n        return prev + 1;\n      });\n    }, 2000);\n\n    // Progress bar animation\n    let startTime = Date.now();\n    const duration = 8000; // 8 seconds total\n    \n    const progressInterval = setInterval(() => {\n      const elapsed = Date.now() - startTime;\n      const newProgress = Math.min((elapsed / duration) * 100, 100);\n      \n      setProgress(newProgress);\n      \n      if (newProgress >= 100) {\n        clearInterval(progressInterval);\n        setIsExiting(true);\n        setTimeout(() => {\n          onLoadComplete();\n        }, 1000); // Wait for exit animation\n      }\n    }, 50);\n\n    return () => {\n      clearInterval(phraseInterval);\n      clearInterval(progressInterval);\n    };\n  }, [isVisible, onLoadComplete]);\n\n  if (!isVisible) return null;\n\n  return (\n    <div className={`campaign-loading-overlay ${isExiting ? 'exiting' : ''}`}>\n      <div className=\"campaign-loading-content\">\n        <BeerStein \n          weight=\"regular\" \n          size={64} \n          className=\"campaign-loading-icon\"\n        />\n        \n        <div className=\"campaign-loading-phrases\">\n          {loadingPhrases.map((phrase, index) => (\n            <div\n              key={phrase}\n              className={`campaign-loading-phrase ${index === currentPhraseIndex ? 'active' : ''}`}\n            >\n              {phrase}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"campaign-loading-progress-container\">\n          <div \n            className=\"campaign-loading-progress-bar\"\n            style={{ width: `${progress}%` }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CampaignLoadingOverlay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}