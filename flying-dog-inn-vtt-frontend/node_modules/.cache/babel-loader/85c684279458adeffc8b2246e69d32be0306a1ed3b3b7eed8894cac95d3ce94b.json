{"ast":null,"code":"var _jsxFileName = \"/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/Maps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Maps.css';\nimport { useCampaign } from '../contexts/CampaignContext';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { DotsThreeVertical } from \"@phosphor-icons/react\";\n\n// Marker configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MARKER_COLORS = {\n  '#FF0000': 'Red',\n  '#00FF00': 'Green',\n  '#0000FF': 'Blue',\n  '#FFFF00': 'Yellow',\n  '#FF00FF': 'Magenta',\n  '#00FFFF': 'Cyan',\n  '#000000': 'Black'\n};\nconst Maps = ({\n  onMapChange\n}) => {\n  _s();\n  const {\n    id: mapId\n  } = useParams();\n  const navigate = useNavigate();\n  const [mapData, setMapData] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    selectedCampaign\n  } = useCampaign();\n  const mapContainerRef = React.useRef(null);\n  const leafletMapRef = React.useRef(null);\n\n  // Cleanup function\n  const cleanupMap = () => {\n    if (leafletMapRef.current) {\n      leafletMapRef.current.remove();\n      leafletMapRef.current = null;\n    }\n  };\n\n  // Reset state when map changes\n  useEffect(() => {\n    setIsLoading(true);\n    setMapData(null);\n    setImageDimensions(null);\n    setMarkers([]);\n    cleanupMap();\n    return cleanupMap;\n  }, [mapId]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return cleanupMap;\n  }, []);\n\n  // Fetch map data and markers\n  useEffect(() => {\n    if (selectedCampaign && mapId) {\n      fetchMap();\n      fetchMarkers();\n    }\n  }, [mapId, selectedCampaign]);\n  const fetchMap = async () => {\n    if (!selectedCampaign) return;\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch map');\n      const data = await response.json();\n      setMapData(data);\n\n      // Load image dimensions\n      const img = new Image();\n      img.onload = () => {\n        console.log('Image loaded:', img.width, img.height);\n        setImageDimensions({\n          width: img.width,\n          height: img.height\n        });\n        setIsLoading(false);\n      };\n      img.onerror = error => {\n        console.error('Failed to load map image:', error);\n        setIsLoading(false);\n      };\n      img.src = `http://localhost:3001/maps/${data.path}`;\n      if (onMapChange) onMapChange(data);\n    } catch (error) {\n      console.error('Error fetching map:', error);\n      setIsLoading(false);\n      navigate('/maps');\n    }\n  };\n  const fetchMarkers = async () => {\n    if (!selectedCampaign || !mapId) return;\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch markers');\n      const data = await response.json();\n\n      // Convert lat/lng to numbers\n      const parsedMarkers = data.map(marker => ({\n        ...marker,\n        lat: Number(marker.lat),\n        lng: Number(marker.lng)\n      }));\n      setMarkers(parsedMarkers);\n\n      // If map is already initialized, add markers\n      if (leafletMapRef.current) {\n        addMarkersToMap(parsedMarkers, leafletMapRef.current);\n      }\n    } catch (error) {\n      console.error('Error fetching markers:', error);\n    }\n  };\n  const createMarkerIcon = (color = '#FF0000') => {\n    return L.divIcon({\n      className: 'custom-marker',\n      html: `<div class=\"marker-icon\" style=\"color: ${color}\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"48\" viewBox=\"0 0 256 256\">\n          <path fill=\"currentColor\" d=\"M128,16a88.1,88.1,0,0,0-88,88c0,75.3,80,132.17,83.41,134.55a8,8,0,0,0,9.18,0C136,236.17,216,179.3,216,104A88.1,88.1,0,0,0,128,16Z\" stroke=\"rgba(0, 0, 0, 0.25)\" stroke-width=\"16\"/>\n        </svg>\n      </div>`,\n      iconSize: [32, 48],\n      iconAnchor: [16, 48],\n      popupAnchor: [0, -24]\n    });\n  };\n  const createPopupContent = (markerData, isNewMarker = false, handlers) => {\n    const uniqueId = Math.random().toString(36).substring(7);\n    const formId = `marker-form-${uniqueId}`;\n    const deleteId = `delete-btn-${uniqueId}`;\n    const submitId = `submit-btn-${uniqueId}`;\n\n    // Create popup content with unique IDs\n    const content = `\n      <div class=\"marker-content\">\n        <form id=\"${formId}\" class=\"marker-form\">\n          <input \n            type=\"text\" \n            name=\"label\" \n            value=\"${markerData.label || ''}\" \n            placeholder=\"Marker Label\" \n            class=\"marker-input\" \n            required\n          />\n          <textarea \n            name=\"description\" \n            placeholder=\"Description (optional)\" \n            class=\"marker-input\" \n            rows=\"2\"\n          >${markerData.description || ''}</textarea>\n          <select name=\"color\" class=\"marker-input\">\n            ${Object.entries(MARKER_COLORS).map(([value, label]) => `\n              <option value=\"${value}\" ${value === (markerData.color || '#FF0000') ? 'selected' : ''}>\n                ${label}\n              </option>\n            `).join('')}\n          </select>\n          <div class=\"marker-actions\">\n            <button type=\"button\" id=\"${deleteId}\" class=\"delete-button\">\n              ${isNewMarker ? 'Cancel' : 'Delete'}\n            </button>\n            <button type=\"button\" id=\"${submitId}\" class=\"dnd-button\">\n              ${isNewMarker ? 'Add Marker' : 'Save Changes'}\n            </button>\n          </div>\n        </form>\n      </div>\n    `;\n\n    // Return both content and IDs for event binding\n    return {\n      content,\n      formId,\n      deleteId,\n      submitId\n    };\n  };\n  const bindMarkerEvents = (marker, markerData, map, popup) => {\n    // Clean up old event listeners\n    marker.off('popupopen').off('popupclose');\n\n    // Create fresh popup content with new IDs\n    const {\n      content,\n      formId,\n      deleteId,\n      submitId\n    } = createPopupContent(markerData, false);\n\n    // Update popup content if provided, otherwise create new popup\n    if (popup) {\n      popup.setContent(content);\n    } else {\n      popup = L.popup({\n        className: 'custom-popup',\n        closeButton: true,\n        autoClose: false,\n        closeOnClick: false\n      }).setContent(content);\n      marker.bindPopup(popup);\n    }\n\n    // Add click handler to close other popups\n    marker.off('click').on('click', () => {\n      map.eachLayer(layer => {\n        if (layer instanceof L.Marker && layer !== marker) {\n          layer.closePopup();\n        }\n      });\n    });\n\n    // Add event listeners when popup opens\n    marker.on('popupopen', () => {\n      const form = document.getElementById(formId);\n      const deleteBtn = document.getElementById(deleteId);\n      const submitBtn = document.getElementById(submitId);\n      if (deleteBtn) {\n        deleteBtn.onclick = async () => {\n          try {\n            deleteBtn.disabled = true;\n            console.log('Deleting marker:', markerData.id);\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}?campaign_id=${selectedCampaign.id}`, {\n              method: 'DELETE'\n            });\n            if (!response.ok) {\n              const errorText = await response.text();\n              throw new Error(`Failed to delete marker: ${errorText}`);\n            }\n            await new Promise(resolve => {\n              setMarkers(prev => {\n                const updated = prev.filter(m => m.id !== markerData.id);\n                resolve(updated);\n                return updated;\n              });\n            });\n            map.removeLayer(marker);\n          } catch (error) {\n            console.error('Error deleting marker:', error);\n            deleteBtn.disabled = false;\n            alert('Failed to delete marker: ' + error.message);\n          }\n        };\n      }\n      if (submitBtn && form) {\n        submitBtn.onclick = async () => {\n          try {\n            submitBtn.disabled = true;\n            const formData = new FormData(form);\n            const description = formData.get('description');\n            const updatedMarker = {\n              ...markerData,\n              label: formData.get('label'),\n              description: description || '',\n              color: formData.get('color'),\n              campaign_id: selectedCampaign.id,\n              lat: Number(markerData.lat),\n              lng: Number(markerData.lng),\n              map_id: Number(mapId)\n            };\n            console.log('Updating marker:', markerData.id, updatedMarker);\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}`, {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedMarker)\n            });\n            if (!response.ok) {\n              const errorText = await response.text();\n              throw new Error(`Failed to update marker: ${errorText}`);\n            }\n            const savedMarker = await response.json();\n            const parsedMarker = {\n              ...savedMarker,\n              id: savedMarker.id,\n              lat: Number(savedMarker.lat),\n              lng: Number(savedMarker.lng),\n              description: savedMarker.description || ''\n            };\n            await new Promise(resolve => {\n              setMarkers(prev => {\n                const updated = prev.map(m => m.id === parsedMarker.id ? parsedMarker : m);\n                resolve(updated);\n                return updated;\n              });\n            });\n            marker.closePopup();\n            marker.setIcon(createMarkerIcon(parsedMarker.color));\n\n            // Rebind events with updated data\n            bindMarkerEvents(marker, parsedMarker, map, popup);\n          } catch (error) {\n            console.error('Error updating marker:', error);\n            submitBtn.disabled = false;\n            alert('Failed to update marker: ' + error.message);\n          }\n        };\n      }\n    });\n\n    // Clean up event listeners when popup closes\n    marker.on('popupclose', () => {\n      const form = document.getElementById(formId);\n      const deleteBtn = document.getElementById(deleteId);\n      const submitBtn = document.getElementById(submitId);\n      if (deleteBtn) deleteBtn.onclick = null;\n      if (submitBtn) submitBtn.onclick = null;\n      if (form) form.onsubmit = null;\n    });\n    return popup;\n  };\n  const addMarkersToMap = (markersData, targetMap) => {\n    if (!targetMap) return;\n\n    // Only clear temporary markers\n    targetMap.eachLayer(layer => {\n      if (layer instanceof L.Marker && !layer.options.permanent) {\n        targetMap.removeLayer(layer);\n      }\n    });\n\n    // Add new markers\n    markersData.forEach(markerData => {\n      if (!markerData || typeof markerData.lat !== 'number' || typeof markerData.lng !== 'number') {\n        console.warn('Invalid marker data:', markerData);\n        return;\n      }\n\n      // Create new marker\n      const marker = L.marker([markerData.lat, markerData.lng], {\n        icon: createMarkerIcon(markerData.color || '#FF0000'),\n        permanent: true\n      });\n\n      // Bind all events\n      bindMarkerEvents(marker, markerData, targetMap);\n      marker.addTo(targetMap);\n    });\n  };\n\n  // Initialize map when data is ready\n  useEffect(() => {\n    if (!mapData || !imageDimensions || !mapContainerRef.current) return;\n    try {\n      console.log('Initializing map with dimensions:', imageDimensions);\n\n      // Clean up any existing map first\n      cleanupMap();\n      const bounds = [[0, 0], [imageDimensions.height, imageDimensions.width]];\n      const map = L.map(mapContainerRef.current, {\n        crs: L.CRS.Simple,\n        maxZoom: 2,\n        minZoom: -2,\n        maxBounds: bounds,\n        zoomControl: true\n      });\n\n      // Store the map instance in the ref\n      leafletMapRef.current = map;\n      const imageOverlay = L.imageOverlay(`http://localhost:3001/maps/${mapData.path}`, bounds);\n      imageOverlay.addTo(map);\n      map.fitBounds(bounds);\n\n      // Handle ESC key to close popups\n      const handleEscKey = e => {\n        if (e.key === 'Escape') {\n          map.eachLayer(layer => {\n            if (layer instanceof L.Marker) {\n              layer.closePopup();\n            }\n          });\n        }\n      };\n\n      // Add ESC key listener\n      document.addEventListener('keydown', handleEscKey);\n\n      // Wait for the image to load before setting up markers\n      imageOverlay.once('load', () => {\n        console.log('Image overlay loaded');\n\n        // Add click handler for new markers\n        map.on('click', e => {\n          // Close all popups first\n          map.eachLayer(layer => {\n            if (layer instanceof L.Marker) {\n              layer.closePopup();\n            }\n          });\n\n          // Only create new marker if clicking directly on the map\n          const isMapClick = e.originalEvent.target === map.getContainer() || e.originalEvent.target.classList.contains('leaflet-tile');\n          if (isMapClick) {\n            handleMapClick(e, map);\n          }\n        });\n\n        // Add existing markers if any\n        if (markers.length > 0) {\n          console.log('Adding existing markers:', markers.length);\n          addMarkersToMap(markers, map);\n        }\n        setIsLoading(false);\n      });\n\n      // Cleanup function\n      return () => {\n        document.removeEventListener('keydown', handleEscKey);\n        cleanupMap();\n      };\n    } catch (error) {\n      console.error('Error initializing map:', error);\n      setIsLoading(false);\n    }\n  }, [mapData, imageDimensions]);\n\n  // Modify handleMapClick to close any open popups before creating a new one\n  const handleMapClick = (e, map) => {\n    if (!selectedCampaign || !mapId || !map) return;\n\n    // Close any open popups first\n    map.eachLayer(layer => {\n      if (layer instanceof L.Marker) {\n        layer.closePopup();\n      }\n    });\n    const {\n      lat,\n      lng\n    } = e.latlng;\n\n    // Remove any existing temporary markers\n    map.eachLayer(layer => {\n      if (layer instanceof L.Marker && !layer.options.permanent) {\n        map.removeLayer(layer);\n      }\n    });\n    const tempMarker = L.marker([lat, lng], {\n      icon: createMarkerIcon('#FF0000'),\n      permanent: false\n    });\n    const tempMarkerData = {\n      map_id: Number(mapId),\n      lat: Number(lat),\n      lng: Number(lng),\n      label: '',\n      description: '',\n      color: '#FF0000',\n      campaign_id: selectedCampaign.id\n    };\n\n    // Create popup with unique IDs\n    const {\n      content,\n      formId,\n      deleteId,\n      submitId\n    } = createPopupContent(tempMarkerData, true);\n    const popup = L.popup({\n      className: 'custom-popup',\n      closeButton: true,\n      autoClose: false,\n      closeOnClick: false\n    }).setContent(content);\n    tempMarker.bindPopup(popup);\n\n    // Add event listeners when popup opens\n    tempMarker.on('popupopen', () => {\n      const form = document.getElementById(formId);\n      const cancelBtn = document.getElementById(deleteId);\n      const createBtn = document.getElementById(submitId);\n      if (cancelBtn) {\n        cancelBtn.onclick = () => {\n          map.removeLayer(tempMarker);\n        };\n      }\n      if (createBtn && form) {\n        createBtn.onclick = async () => {\n          try {\n            createBtn.disabled = true; // Prevent double clicks\n\n            const formData = new FormData(form);\n            const newMarker = {\n              ...tempMarkerData,\n              label: formData.get('label'),\n              description: formData.get('description'),\n              color: formData.get('color')\n            };\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(newMarker)\n            });\n            if (!response.ok) throw new Error('Failed to create marker');\n            const savedMarker = await response.json();\n\n            // Convert lat/lng to numbers and ensure all fields are present\n            const parsedMarker = {\n              ...savedMarker,\n              id: savedMarker.id,\n              // Ensure ID is explicitly set\n              lat: Number(savedMarker.lat),\n              lng: Number(savedMarker.lng),\n              description: savedMarker.description || '',\n              campaign_id: selectedCampaign.id,\n              map_id: Number(mapId)\n            };\n            setMarkers(prev => [...prev, parsedMarker]);\n            map.removeLayer(tempMarker);\n\n            // Add the new marker\n            const marker = L.marker([parsedMarker.lat, parsedMarker.lng], {\n              icon: createMarkerIcon(parsedMarker.color || '#FF0000'),\n              permanent: true,\n              markerId: parsedMarker.id // Set the marker ID in options\n            });\n\n            // Bind all events\n            bindMarkerEvents(marker, parsedMarker, map);\n            marker.addTo(map);\n          } catch (error) {\n            console.error('Error creating marker:', error);\n            createBtn.disabled = false;\n            alert('Failed to create marker: ' + error.message);\n          }\n        };\n      }\n    });\n\n    // Add event listener for popup close\n    tempMarker.on('popupclose', () => {\n      // Clean up the temporary marker if it's still on the map\n      if (map.hasLayer(tempMarker)) {\n        map.removeLayer(tempMarker);\n      }\n    });\n    tempMarker.addTo(map).openPopup();\n  };\n  const handleMarkerCreate = () => {};\n  const handleMarkerUpdate = () => {};\n  const handleMarkerDelete = () => {};\n  const handleMarkerEdit = () => {};\n  if (isLoading || !mapData || !imageDimensions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%'\n        },\n        children: \"Loading map...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: 0,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: mapData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"more\",\n        \"aria-controls\": \"map-menu\",\n        \"aria-haspopup\": \"true\",\n        onClick: e => setMenuAnchorEl(e.currentTarget),\n        style: {\n          marginLeft: '8px',\n          color: '#111827'\n        },\n        children: /*#__PURE__*/_jsxDEV(DotsThreeVertical, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"map-menu\",\n      anchorEl: menuAnchorEl,\n      keepMounted: true,\n      open: Boolean(menuAnchorEl),\n      onClose: () => setMenuAnchorEl(null),\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => setMenuAnchorEl(null),\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => setMenuAnchorEl(null),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      style: {\n        height: 'calc(100vh - 80px)',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 580,\n    columnNumber: 5\n  }, this);\n};\n_s(Maps, \"D30yCAlSUcVkQ/D9gtJR1YweAWs=\", false, function () {\n  return [useParams, useNavigate, useCampaign];\n});\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","L","useCampaign","IconButton","Menu","MenuItem","DotsThreeVertical","jsxDEV","_jsxDEV","MARKER_COLORS","Maps","onMapChange","_s","id","mapId","navigate","mapData","setMapData","markers","setMarkers","menuAnchorEl","setMenuAnchorEl","imageDimensions","setImageDimensions","isLoading","setIsLoading","selectedCampaign","mapContainerRef","useRef","leafletMapRef","cleanupMap","current","remove","fetchMap","fetchMarkers","response","fetch","ok","Error","data","json","img","Image","onload","console","log","width","height","onerror","error","src","path","parsedMarkers","map","marker","lat","Number","lng","addMarkersToMap","createMarkerIcon","color","divIcon","className","html","iconSize","iconAnchor","popupAnchor","createPopupContent","markerData","isNewMarker","handlers","uniqueId","Math","random","toString","substring","formId","deleteId","submitId","content","label","description","Object","entries","value","join","bindMarkerEvents","popup","off","setContent","closeButton","autoClose","closeOnClick","bindPopup","on","eachLayer","layer","Marker","closePopup","form","document","getElementById","deleteBtn","submitBtn","onclick","disabled","method","errorText","text","Promise","resolve","prev","updated","filter","m","removeLayer","alert","message","formData","FormData","get","updatedMarker","campaign_id","map_id","headers","body","JSON","stringify","savedMarker","parsedMarker","setIcon","onsubmit","markersData","targetMap","options","permanent","forEach","warn","icon","addTo","bounds","crs","CRS","Simple","maxZoom","minZoom","maxBounds","zoomControl","imageOverlay","fitBounds","handleEscKey","e","key","addEventListener","once","isMapClick","originalEvent","target","getContainer","classList","contains","handleMapClick","length","removeEventListener","latlng","tempMarker","tempMarkerData","cancelBtn","createBtn","newMarker","markerId","hasLayer","openPopup","handleMarkerCreate","handleMarkerUpdate","handleMarkerDelete","handleMarkerEdit","children","style","display","alignItems","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","padding","margin","name","onClick","currentTarget","marginLeft","size","anchorEl","keepMounted","open","Boolean","onClose","ref","_c","$RefreshReg$"],"sources":["/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/Maps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Maps.css';\nimport { useCampaign } from '../contexts/CampaignContext';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { DotsThreeVertical } from \"@phosphor-icons/react\";\n\n// Marker configuration\nconst MARKER_COLORS = {\n  '#FF0000': 'Red',\n  '#00FF00': 'Green',\n  '#0000FF': 'Blue',\n  '#FFFF00': 'Yellow',\n  '#FF00FF': 'Magenta',\n  '#00FFFF': 'Cyan',\n  '#000000': 'Black'\n};\n\nconst Maps = ({ onMapChange }) => {\n  const { id: mapId } = useParams();\n  const navigate = useNavigate();\n  const [mapData, setMapData] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { selectedCampaign } = useCampaign();\n  const mapContainerRef = React.useRef(null);\n  const leafletMapRef = React.useRef(null);\n\n  // Cleanup function\n  const cleanupMap = () => {\n    if (leafletMapRef.current) {\n      leafletMapRef.current.remove();\n      leafletMapRef.current = null;\n    }\n  };\n\n  // Reset state when map changes\n  useEffect(() => {\n    setIsLoading(true);\n    setMapData(null);\n    setImageDimensions(null);\n    setMarkers([]);\n    cleanupMap();\n    return cleanupMap;\n  }, [mapId]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return cleanupMap;\n  }, []);\n\n  // Fetch map data and markers\n  useEffect(() => {\n    if (selectedCampaign && mapId) {\n      fetchMap();\n      fetchMarkers();\n    }\n  }, [mapId, selectedCampaign]);\n\n  const fetchMap = async () => {\n    if (!selectedCampaign) return;\n    \n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch map');\n      const data = await response.json();\n      setMapData(data);\n      \n      // Load image dimensions\n      const img = new Image();\n      img.onload = () => {\n        console.log('Image loaded:', img.width, img.height);\n        setImageDimensions({ width: img.width, height: img.height });\n        setIsLoading(false);\n      };\n      img.onerror = (error) => {\n        console.error('Failed to load map image:', error);\n        setIsLoading(false);\n      };\n      img.src = `http://localhost:3001/maps/${data.path}`;\n      \n      if (onMapChange) onMapChange(data);\n    } catch (error) {\n      console.error('Error fetching map:', error);\n      setIsLoading(false);\n      navigate('/maps');\n    }\n  };\n\n  const fetchMarkers = async () => {\n    if (!selectedCampaign || !mapId) return;\n    \n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch markers');\n      const data = await response.json();\n      \n      // Convert lat/lng to numbers\n      const parsedMarkers = data.map(marker => ({\n        ...marker,\n        lat: Number(marker.lat),\n        lng: Number(marker.lng)\n      }));\n      \n      setMarkers(parsedMarkers);\n      \n      // If map is already initialized, add markers\n      if (leafletMapRef.current) {\n        addMarkersToMap(parsedMarkers, leafletMapRef.current);\n      }\n    } catch (error) {\n      console.error('Error fetching markers:', error);\n    }\n  };\n\n  const createMarkerIcon = (color = '#FF0000') => {\n    return L.divIcon({\n      className: 'custom-marker',\n      html: `<div class=\"marker-icon\" style=\"color: ${color}\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"48\" viewBox=\"0 0 256 256\">\n          <path fill=\"currentColor\" d=\"M128,16a88.1,88.1,0,0,0-88,88c0,75.3,80,132.17,83.41,134.55a8,8,0,0,0,9.18,0C136,236.17,216,179.3,216,104A88.1,88.1,0,0,0,128,16Z\" stroke=\"rgba(0, 0, 0, 0.25)\" stroke-width=\"16\"/>\n        </svg>\n      </div>`,\n      iconSize: [32, 48],\n      iconAnchor: [16, 48],\n      popupAnchor: [0, -24]\n    });\n  };\n\n  const createPopupContent = (markerData, isNewMarker = false, handlers) => {\n    const uniqueId = Math.random().toString(36).substring(7);\n    const formId = `marker-form-${uniqueId}`;\n    const deleteId = `delete-btn-${uniqueId}`;\n    const submitId = `submit-btn-${uniqueId}`;\n\n    // Create popup content with unique IDs\n    const content = `\n      <div class=\"marker-content\">\n        <form id=\"${formId}\" class=\"marker-form\">\n          <input \n            type=\"text\" \n            name=\"label\" \n            value=\"${markerData.label || ''}\" \n            placeholder=\"Marker Label\" \n            class=\"marker-input\" \n            required\n          />\n          <textarea \n            name=\"description\" \n            placeholder=\"Description (optional)\" \n            class=\"marker-input\" \n            rows=\"2\"\n          >${markerData.description || ''}</textarea>\n          <select name=\"color\" class=\"marker-input\">\n            ${Object.entries(MARKER_COLORS).map(([value, label]) => `\n              <option value=\"${value}\" ${value === (markerData.color || '#FF0000') ? 'selected' : ''}>\n                ${label}\n              </option>\n            `).join('')}\n          </select>\n          <div class=\"marker-actions\">\n            <button type=\"button\" id=\"${deleteId}\" class=\"delete-button\">\n              ${isNewMarker ? 'Cancel' : 'Delete'}\n            </button>\n            <button type=\"button\" id=\"${submitId}\" class=\"dnd-button\">\n              ${isNewMarker ? 'Add Marker' : 'Save Changes'}\n            </button>\n          </div>\n        </form>\n      </div>\n    `;\n\n    // Return both content and IDs for event binding\n    return { content, formId, deleteId, submitId };\n  };\n\n  const bindMarkerEvents = (marker, markerData, map, popup) => {\n    // Clean up old event listeners\n    marker.off('popupopen').off('popupclose');\n\n    // Create fresh popup content with new IDs\n    const { content, formId, deleteId, submitId } = createPopupContent(markerData, false);\n    \n    // Update popup content if provided, otherwise create new popup\n    if (popup) {\n      popup.setContent(content);\n    } else {\n      popup = L.popup({\n        className: 'custom-popup',\n        closeButton: true,\n        autoClose: false,\n        closeOnClick: false\n      }).setContent(content);\n      marker.bindPopup(popup);\n    }\n\n    // Add click handler to close other popups\n    marker.off('click').on('click', () => {\n      map.eachLayer((layer) => {\n        if (layer instanceof L.Marker && layer !== marker) {\n          layer.closePopup();\n        }\n      });\n    });\n\n    // Add event listeners when popup opens\n    marker.on('popupopen', () => {\n      const form = document.getElementById(formId);\n      const deleteBtn = document.getElementById(deleteId);\n      const submitBtn = document.getElementById(submitId);\n\n      if (deleteBtn) {\n        deleteBtn.onclick = async () => {\n          try {\n            deleteBtn.disabled = true;\n            \n            console.log('Deleting marker:', markerData.id);\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}?campaign_id=${selectedCampaign.id}`, {\n              method: 'DELETE',\n            });\n            \n            if (!response.ok) {\n              const errorText = await response.text();\n              throw new Error(`Failed to delete marker: ${errorText}`);\n            }\n            \n            await new Promise(resolve => {\n              setMarkers(prev => {\n                const updated = prev.filter(m => m.id !== markerData.id);\n                resolve(updated);\n                return updated;\n              });\n            });\n\n            map.removeLayer(marker);\n          } catch (error) {\n            console.error('Error deleting marker:', error);\n            deleteBtn.disabled = false;\n            alert('Failed to delete marker: ' + error.message);\n          }\n        };\n      }\n\n      if (submitBtn && form) {\n        submitBtn.onclick = async () => {\n          try {\n            submitBtn.disabled = true;\n            \n            const formData = new FormData(form);\n            const description = formData.get('description');\n            const updatedMarker = {\n              ...markerData,\n              label: formData.get('label'),\n              description: description || '',\n              color: formData.get('color'),\n              campaign_id: selectedCampaign.id,\n              lat: Number(markerData.lat),\n              lng: Number(markerData.lng),\n              map_id: Number(mapId)\n            };\n\n            console.log('Updating marker:', markerData.id, updatedMarker);\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}`, {\n              method: 'PUT',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(updatedMarker)\n            });\n\n            if (!response.ok) {\n              const errorText = await response.text();\n              throw new Error(`Failed to update marker: ${errorText}`);\n            }\n            \n            const savedMarker = await response.json();\n            \n            const parsedMarker = {\n              ...savedMarker,\n              id: savedMarker.id,\n              lat: Number(savedMarker.lat),\n              lng: Number(savedMarker.lng),\n              description: savedMarker.description || ''\n            };\n            \n            await new Promise(resolve => {\n              setMarkers(prev => {\n                const updated = prev.map(m => m.id === parsedMarker.id ? parsedMarker : m);\n                resolve(updated);\n                return updated;\n              });\n            });\n\n            marker.closePopup();\n            marker.setIcon(createMarkerIcon(parsedMarker.color));\n            \n            // Rebind events with updated data\n            bindMarkerEvents(marker, parsedMarker, map, popup);\n          } catch (error) {\n            console.error('Error updating marker:', error);\n            submitBtn.disabled = false;\n            alert('Failed to update marker: ' + error.message);\n          }\n        };\n      }\n    });\n\n    // Clean up event listeners when popup closes\n    marker.on('popupclose', () => {\n      const form = document.getElementById(formId);\n      const deleteBtn = document.getElementById(deleteId);\n      const submitBtn = document.getElementById(submitId);\n\n      if (deleteBtn) deleteBtn.onclick = null;\n      if (submitBtn) submitBtn.onclick = null;\n      if (form) form.onsubmit = null;\n    });\n\n    return popup;\n  };\n\n  const addMarkersToMap = (markersData, targetMap) => {\n    if (!targetMap) return;\n\n    // Only clear temporary markers\n    targetMap.eachLayer((layer) => {\n      if (layer instanceof L.Marker && !layer.options.permanent) {\n        targetMap.removeLayer(layer);\n      }\n    });\n\n    // Add new markers\n    markersData.forEach(markerData => {\n      if (!markerData || typeof markerData.lat !== 'number' || typeof markerData.lng !== 'number') {\n        console.warn('Invalid marker data:', markerData);\n        return;\n      }\n\n      // Create new marker\n      const marker = L.marker([markerData.lat, markerData.lng], {\n        icon: createMarkerIcon(markerData.color || '#FF0000'),\n        permanent: true\n      });\n\n      // Bind all events\n      bindMarkerEvents(marker, markerData, targetMap);\n\n      marker.addTo(targetMap);\n    });\n  };\n\n  // Initialize map when data is ready\n  useEffect(() => {\n    if (!mapData || !imageDimensions || !mapContainerRef.current) return;\n\n    try {\n      console.log('Initializing map with dimensions:', imageDimensions);\n      \n      // Clean up any existing map first\n      cleanupMap();\n\n      const bounds = [[0, 0], [imageDimensions.height, imageDimensions.width]];\n      const map = L.map(mapContainerRef.current, {\n        crs: L.CRS.Simple,\n        maxZoom: 2,\n        minZoom: -2,\n        maxBounds: bounds,\n        zoomControl: true\n      });\n\n      // Store the map instance in the ref\n      leafletMapRef.current = map;\n\n      const imageOverlay = L.imageOverlay(`http://localhost:3001/maps/${mapData.path}`, bounds);\n      imageOverlay.addTo(map);\n      map.fitBounds(bounds);\n\n      // Handle ESC key to close popups\n      const handleEscKey = (e) => {\n        if (e.key === 'Escape') {\n          map.eachLayer((layer) => {\n            if (layer instanceof L.Marker) {\n              layer.closePopup();\n            }\n          });\n        }\n      };\n\n      // Add ESC key listener\n      document.addEventListener('keydown', handleEscKey);\n\n      // Wait for the image to load before setting up markers\n      imageOverlay.once('load', () => {\n        console.log('Image overlay loaded');\n\n        // Add click handler for new markers\n        map.on('click', (e) => {\n          // Close all popups first\n          map.eachLayer((layer) => {\n            if (layer instanceof L.Marker) {\n              layer.closePopup();\n            }\n          });\n\n          // Only create new marker if clicking directly on the map\n          const isMapClick = e.originalEvent.target === map.getContainer() || \n                            e.originalEvent.target.classList.contains('leaflet-tile');\n\n          if (isMapClick) {\n            handleMapClick(e, map);\n          }\n        });\n\n        // Add existing markers if any\n        if (markers.length > 0) {\n          console.log('Adding existing markers:', markers.length);\n          addMarkersToMap(markers, map);\n        }\n\n        setIsLoading(false);\n      });\n\n      // Cleanup function\n      return () => {\n        document.removeEventListener('keydown', handleEscKey);\n        cleanupMap();\n      };\n\n    } catch (error) {\n      console.error('Error initializing map:', error);\n      setIsLoading(false);\n    }\n  }, [mapData, imageDimensions]);\n\n  // Modify handleMapClick to close any open popups before creating a new one\n  const handleMapClick = (e, map) => {\n    if (!selectedCampaign || !mapId || !map) return;\n\n    // Close any open popups first\n    map.eachLayer((layer) => {\n      if (layer instanceof L.Marker) {\n        layer.closePopup();\n      }\n    });\n\n    const { lat, lng } = e.latlng;\n    \n    // Remove any existing temporary markers\n    map.eachLayer((layer) => {\n      if (layer instanceof L.Marker && !layer.options.permanent) {\n        map.removeLayer(layer);\n      }\n    });\n\n    const tempMarker = L.marker([lat, lng], {\n      icon: createMarkerIcon('#FF0000'),\n      permanent: false\n    });\n\n    const tempMarkerData = {\n      map_id: Number(mapId),\n      lat: Number(lat),\n      lng: Number(lng),\n      label: '',\n      description: '',\n      color: '#FF0000',\n      campaign_id: selectedCampaign.id\n    };\n\n    // Create popup with unique IDs\n    const { content, formId, deleteId, submitId } = createPopupContent(tempMarkerData, true);\n    const popup = L.popup({\n      className: 'custom-popup',\n      closeButton: true,\n      autoClose: false,\n      closeOnClick: false\n    }).setContent(content);\n\n    tempMarker.bindPopup(popup);\n\n    // Add event listeners when popup opens\n    tempMarker.on('popupopen', () => {\n      const form = document.getElementById(formId);\n      const cancelBtn = document.getElementById(deleteId);\n      const createBtn = document.getElementById(submitId);\n\n      if (cancelBtn) {\n        cancelBtn.onclick = () => {\n          map.removeLayer(tempMarker);\n        };\n      }\n\n      if (createBtn && form) {\n        createBtn.onclick = async () => {\n          try {\n            createBtn.disabled = true; // Prevent double clicks\n            \n            const formData = new FormData(form);\n            const newMarker = {\n              ...tempMarkerData,\n              label: formData.get('label'),\n              description: formData.get('description'),\n              color: formData.get('color')\n            };\n\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers`, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(newMarker)\n            });\n\n            if (!response.ok) throw new Error('Failed to create marker');\n            const savedMarker = await response.json();\n            \n            // Convert lat/lng to numbers and ensure all fields are present\n            const parsedMarker = {\n              ...savedMarker,\n              id: savedMarker.id, // Ensure ID is explicitly set\n              lat: Number(savedMarker.lat),\n              lng: Number(savedMarker.lng),\n              description: savedMarker.description || '',\n              campaign_id: selectedCampaign.id,\n              map_id: Number(mapId)\n            };\n            \n            setMarkers(prev => [...prev, parsedMarker]);\n            map.removeLayer(tempMarker);\n            \n            // Add the new marker\n            const marker = L.marker([parsedMarker.lat, parsedMarker.lng], {\n              icon: createMarkerIcon(parsedMarker.color || '#FF0000'),\n              permanent: true,\n              markerId: parsedMarker.id // Set the marker ID in options\n            });\n            \n            // Bind all events\n            bindMarkerEvents(marker, parsedMarker, map);\n\n            marker.addTo(map);\n          } catch (error) {\n            console.error('Error creating marker:', error);\n            createBtn.disabled = false;\n            alert('Failed to create marker: ' + error.message);\n          }\n        };\n      }\n    });\n\n    // Add event listener for popup close\n    tempMarker.on('popupclose', () => {\n      // Clean up the temporary marker if it's still on the map\n      if (map.hasLayer(tempMarker)) {\n        map.removeLayer(tempMarker);\n      }\n    });\n\n    tempMarker.addTo(map).openPopup();\n  };\n\n  const handleMarkerCreate = () => {};\n  const handleMarkerUpdate = () => {};\n  const handleMarkerDelete = () => {};\n  const handleMarkerEdit = () => {};\n\n  if (isLoading || !mapData || !imageDimensions) {\n    return (\n      <div className=\"map-container\">\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\n          Loading map...\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"map-container\">\n      <div style={{ display: 'flex', alignItems: 'center', padding: '0 16px' }}>\n        <h2 style={{ margin: 0, display: 'flex', alignItems: 'center' }}>{mapData.name}</h2>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"map-menu\"\n          aria-haspopup=\"true\"\n          onClick={(e) => setMenuAnchorEl(e.currentTarget)}\n          style={{ marginLeft: '8px', color: '#111827' }}\n        >\n          <DotsThreeVertical size={24} />\n        </IconButton>\n      </div>\n\n      <Menu\n        id=\"map-menu\"\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={() => setMenuAnchorEl(null)}\n      >\n        <MenuItem onClick={() => setMenuAnchorEl(null)}>Rename</MenuItem>\n        <MenuItem onClick={() => setMenuAnchorEl(null)}>Delete</MenuItem>\n      </Menu>\n\n      <div ref={mapContainerRef} style={{ height: 'calc(100vh - 80px)', width: '100%' }} />\n    </div>\n  );\n};\n\nexport default Maps;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}