{"ast":null,"code":"var _jsxFileName = \"/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/contexts/CampaignContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampaignContext = /*#__PURE__*/createContext();\nexport const CampaignProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasInitialized, setHasInitialized] = useState(false);\n\n  // Handle initial campaign loading\n  useEffect(() => {\n    const initializeCampaign = async () => {\n      try {\n        console.log('Initializing campaign...');\n        const storedCampaignId = localStorage.getItem('selectedCampaignId');\n        console.log('Initial localStorage campaign ID:', storedCampaignId);\n        if (storedCampaignId) {\n          console.log('Found stored campaign ID:', storedCampaignId);\n          const response = await fetch(`http://localhost:3001/api/campaigns/${storedCampaignId}`);\n          console.log('Campaign fetch response:', response.status);\n          if (response.ok) {\n            const campaign = await response.json();\n            console.log('Successfully loaded campaign:', campaign);\n            setSelectedCampaign(campaign);\n          } else {\n            console.warn('Stored campaign not found, clearing selection');\n            localStorage.removeItem('selectedCampaignId');\n            setSelectedCampaign(null);\n          }\n        } else {\n          console.log('No stored campaign ID found');\n          setSelectedCampaign(null);\n        }\n      } catch (error) {\n        console.error('Error initializing campaign:', error);\n        localStorage.removeItem('selectedCampaignId');\n        setSelectedCampaign(null);\n      } finally {\n        setIsLoading(false);\n        setHasInitialized(true);\n      }\n    };\n    initializeCampaign();\n  }, []);\n\n  // Add effect to log campaign changes\n  useEffect(() => {\n    console.log('Selected campaign changed:', selectedCampaign);\n    console.log('Current localStorage campaign ID:', localStorage.getItem('selectedCampaignId'));\n  }, [selectedCampaign]);\n  const updateSelectedCampaign = campaign => {\n    console.log('updateSelectedCampaign called with:', campaign);\n    if (campaign) {\n      console.log('Setting campaign ID in localStorage:', campaign.id);\n      localStorage.setItem('selectedCampaignId', campaign.id.toString());\n\n      // Verify the campaign was actually stored\n      const storedId = localStorage.getItem('selectedCampaignId');\n      console.log('Verifying localStorage - stored ID:', storedId);\n      if (storedId !== campaign.id.toString()) {\n        console.error('Failed to store campaign ID in localStorage');\n      }\n    } else {\n      console.log('Removing campaign ID from localStorage');\n      localStorage.removeItem('selectedCampaignId');\n    }\n    setSelectedCampaign(campaign);\n  };\n  return /*#__PURE__*/_jsxDEV(CampaignContext.Provider, {\n    value: {\n      selectedCampaign,\n      updateSelectedCampaign,\n      isLoading,\n      hasInitialized\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(CampaignProvider, \"FQlAlWnqWyKaBEC7zZSfOI/XVSc=\");\n_c = CampaignProvider;\nexport const useCampaign = () => {\n  _s2();\n  const context = useContext(CampaignContext);\n  if (context === undefined) {\n    throw new Error('useCampaign must be used within a CampaignProvider');\n  }\n  return context;\n};\n_s2(useCampaign, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CampaignProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CampaignContext","CampaignProvider","children","_s","selectedCampaign","setSelectedCampaign","isLoading","setIsLoading","hasInitialized","setHasInitialized","initializeCampaign","console","log","storedCampaignId","localStorage","getItem","response","fetch","status","ok","campaign","json","warn","removeItem","error","updateSelectedCampaign","id","setItem","toString","storedId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCampaign","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/contexts/CampaignContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst CampaignContext = createContext();\n\nexport const CampaignProvider = ({ children }) => {\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasInitialized, setHasInitialized] = useState(false);\n\n  // Handle initial campaign loading\n  useEffect(() => {\n    const initializeCampaign = async () => {\n      try {\n        console.log('Initializing campaign...');\n        const storedCampaignId = localStorage.getItem('selectedCampaignId');\n        console.log('Initial localStorage campaign ID:', storedCampaignId);\n        \n        if (storedCampaignId) {\n          console.log('Found stored campaign ID:', storedCampaignId);\n          const response = await fetch(`http://localhost:3001/api/campaigns/${storedCampaignId}`);\n          console.log('Campaign fetch response:', response.status);\n          \n          if (response.ok) {\n            const campaign = await response.json();\n            console.log('Successfully loaded campaign:', campaign);\n            setSelectedCampaign(campaign);\n          } else {\n            console.warn('Stored campaign not found, clearing selection');\n            localStorage.removeItem('selectedCampaignId');\n            setSelectedCampaign(null);\n          }\n        } else {\n          console.log('No stored campaign ID found');\n          setSelectedCampaign(null);\n        }\n      } catch (error) {\n        console.error('Error initializing campaign:', error);\n        localStorage.removeItem('selectedCampaignId');\n        setSelectedCampaign(null);\n      } finally {\n        setIsLoading(false);\n        setHasInitialized(true);\n      }\n    };\n\n    initializeCampaign();\n  }, []);\n\n  // Add effect to log campaign changes\n  useEffect(() => {\n    console.log('Selected campaign changed:', selectedCampaign);\n    console.log('Current localStorage campaign ID:', localStorage.getItem('selectedCampaignId'));\n  }, [selectedCampaign]);\n\n  const updateSelectedCampaign = (campaign) => {\n    console.log('updateSelectedCampaign called with:', campaign);\n    if (campaign) {\n      console.log('Setting campaign ID in localStorage:', campaign.id);\n      localStorage.setItem('selectedCampaignId', campaign.id.toString());\n      \n      // Verify the campaign was actually stored\n      const storedId = localStorage.getItem('selectedCampaignId');\n      console.log('Verifying localStorage - stored ID:', storedId);\n      \n      if (storedId !== campaign.id.toString()) {\n        console.error('Failed to store campaign ID in localStorage');\n      }\n    } else {\n      console.log('Removing campaign ID from localStorage');\n      localStorage.removeItem('selectedCampaignId');\n    }\n    \n    setSelectedCampaign(campaign);\n  };\n\n  return (\n    <CampaignContext.Provider \n      value={{ \n        selectedCampaign, \n        updateSelectedCampaign,\n        isLoading,\n        hasInitialized\n      }}\n    >\n      {children}\n    </CampaignContext.Provider>\n  );\n};\n\nexport const useCampaign = () => {\n  const context = useContext(CampaignContext);\n  if (context === undefined) {\n    throw new Error('useCampaign must be used within a CampaignProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}