{"ast":null,"code":"var _jsxFileName = \"/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/Maps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Maps.css';\nimport { useCampaign } from '../contexts/CampaignContext';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { DotsThreeVertical } from \"@phosphor-icons/react\";\n\n// Marker configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MARKER_COLORS = {\n  '#FF0000': 'Red',\n  '#00FF00': 'Green',\n  '#0000FF': 'Blue',\n  '#FFFF00': 'Yellow',\n  '#FF00FF': 'Magenta',\n  '#00FFFF': 'Cyan',\n  '#000000': 'Black'\n};\nconst Maps = ({\n  onMapChange\n}) => {\n  _s();\n  const {\n    id: mapId\n  } = useParams();\n  const navigate = useNavigate();\n  const [map, setMap] = useState(null);\n  const [leafletMap, setLeafletMap] = useState(null);\n  const [mapData, setMapData] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    selectedCampaign\n  } = useCampaign();\n  const mapContainerRef = React.useRef(null);\n\n  // Reset state when map changes\n  useEffect(() => {\n    setIsLoading(true);\n    setMapData(null);\n    setImageDimensions(null);\n    setMarkers([]);\n    if (leafletMap) {\n      leafletMap.remove();\n      setLeafletMap(null);\n    }\n  }, [mapId]);\n\n  // Fetch map data and markers\n  useEffect(() => {\n    if (selectedCampaign && mapId) {\n      fetchMap();\n      fetchMarkers();\n    }\n  }, [mapId, selectedCampaign]);\n  const fetchMap = async () => {\n    if (!selectedCampaign) return;\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch map');\n      const data = await response.json();\n      setMapData(data);\n\n      // Load image dimensions\n      const img = new Image();\n      img.onload = () => {\n        setImageDimensions({\n          width: img.width,\n          height: img.height\n        });\n      };\n      img.onerror = error => {\n        console.error('Failed to load map image:', error);\n        setIsLoading(false);\n      };\n      img.src = `http://localhost:3001/maps/${data.path}`;\n      if (onMapChange) onMapChange(data);\n    } catch (error) {\n      console.error('Error fetching map:', error);\n      setIsLoading(false);\n      navigate('/maps');\n    }\n  };\n  const fetchMarkers = async () => {\n    if (!selectedCampaign || !mapId) return;\n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch markers');\n      const data = await response.json();\n\n      // Convert lat/lng to numbers\n      const parsedMarkers = data.map(marker => ({\n        ...marker,\n        lat: Number(marker.lat),\n        lng: Number(marker.lng)\n      }));\n      setMarkers(parsedMarkers);\n\n      // If map is already initialized, add markers\n      if (leafletMap) {\n        addMarkersToMap(parsedMarkers, leafletMap);\n      }\n    } catch (error) {\n      console.error('Error fetching markers:', error);\n    }\n  };\n  const createMarkerIcon = (color = '#FF0000') => {\n    return L.divIcon({\n      className: 'custom-marker',\n      html: `<div class=\"marker-icon\" style=\"color: ${color}\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"48\" viewBox=\"0 0 256 256\">\n          <path fill=\"currentColor\" d=\"M128,16a88.1,88.1,0,0,0-88,88c0,75.3,80,132.17,83.41,134.55a8,8,0,0,0,9.18,0C136,236.17,216,179.3,216,104A88.1,88.1,0,0,0,128,16Z\" stroke=\"rgba(0, 0, 0, 0.25)\" stroke-width=\"16\"/>\n        </svg>\n      </div>`,\n      iconSize: [32, 48],\n      iconAnchor: [16, 48],\n      popupAnchor: [0, -24]\n    });\n  };\n  const createPopupContent = (markerData, isNewMarker = false, handlers) => {\n    const uniqueId = Math.random().toString(36).substring(7);\n    const formId = `marker-form-${uniqueId}`;\n    const deleteId = `delete-btn-${uniqueId}`;\n    const submitId = `submit-btn-${uniqueId}`;\n\n    // Create popup content with unique IDs\n    const content = `\n      <div class=\"marker-content\">\n        <form id=\"${formId}\" class=\"marker-form\">\n          <input \n            type=\"text\" \n            name=\"label\" \n            value=\"${markerData.label || ''}\" \n            placeholder=\"Marker Label\" \n            class=\"marker-input\" \n            required\n          />\n          <textarea \n            name=\"description\" \n            placeholder=\"Description (optional)\" \n            class=\"marker-input\" \n            rows=\"2\"\n          >${markerData.description || ''}</textarea>\n          <select name=\"color\" class=\"marker-input\">\n            ${Object.entries(MARKER_COLORS).map(([value, label]) => `\n              <option value=\"${value}\" ${value === (markerData.color || '#FF0000') ? 'selected' : ''}>\n                ${label}\n              </option>\n            `).join('')}\n          </select>\n          <div class=\"marker-actions\">\n            <button type=\"button\" id=\"${deleteId}\" class=\"delete-button\">\n              ${isNewMarker ? 'Cancel' : 'Delete'}\n            </button>\n            <button type=\"button\" id=\"${submitId}\" class=\"dnd-button\">\n              ${isNewMarker ? 'Add Marker' : 'Save Changes'}\n            </button>\n          </div>\n        </form>\n      </div>\n    `;\n\n    // Return both content and IDs for event binding\n    return {\n      content,\n      formId,\n      deleteId,\n      submitId\n    };\n  };\n  const addMarkersToMap = (markersData, targetMap) => {\n    if (!targetMap) return;\n\n    // Only clear temporary markers\n    targetMap.eachLayer(layer => {\n      if (layer instanceof L.Marker && !layer.options.permanent) {\n        targetMap.removeLayer(layer);\n      }\n    });\n\n    // Add new markers\n    markersData.forEach(markerData => {\n      if (!markerData || typeof markerData.lat !== 'number' || typeof markerData.lng !== 'number') {\n        console.warn('Invalid marker data:', markerData);\n        return;\n      }\n\n      // Create new marker\n      const marker = L.marker([markerData.lat, markerData.lng], {\n        icon: createMarkerIcon(markerData.color || '#FF0000'),\n        permanent: true,\n        markerId: markerData.id\n      });\n\n      // Create popup with unique IDs\n      const {\n        content,\n        formId,\n        deleteId,\n        submitId\n      } = createPopupContent(markerData, false);\n      const popup = L.popup({\n        className: 'custom-popup',\n        closeButton: true,\n        autoClose: false,\n        closeOnClick: false\n      }).setContent(content);\n      marker.bindPopup(popup);\n\n      // Add event listeners when popup opens\n      marker.on('popupopen', () => {\n        // Get elements using unique IDs\n        const form = document.getElementById(formId);\n        const deleteBtn = document.getElementById(deleteId);\n        const submitBtn = document.getElementById(submitId);\n        if (deleteBtn) {\n          deleteBtn.onclick = async () => {\n            try {\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}?campaign_id=${selectedCampaign.id}`, {\n                method: 'DELETE'\n              });\n              if (!response.ok) throw new Error('Failed to delete marker');\n              setMarkers(prev => prev.filter(m => m.id !== markerData.id));\n              targetMap.removeLayer(marker);\n            } catch (error) {\n              console.error('Error deleting marker:', error);\n            }\n          };\n        }\n        if (submitBtn && form) {\n          submitBtn.onclick = async () => {\n            const formData = new FormData(form);\n            const updatedMarker = {\n              ...markerData,\n              label: formData.get('label'),\n              description: formData.get('description'),\n              color: formData.get('color'),\n              campaign_id: selectedCampaign.id\n            };\n            try {\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}`, {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(updatedMarker)\n              });\n              if (!response.ok) throw new Error('Failed to update marker');\n              const savedMarker = await response.json();\n\n              // Convert lat/lng to numbers\n              const parsedMarker = {\n                ...savedMarker,\n                lat: Number(savedMarker.lat),\n                lng: Number(savedMarker.lng)\n              };\n              setMarkers(prev => prev.map(m => m.id === parsedMarker.id ? parsedMarker : m));\n              marker.setIcon(createMarkerIcon(parsedMarker.color));\n              marker.closePopup();\n            } catch (error) {\n              console.error('Error updating marker:', error);\n            }\n          };\n        }\n      });\n      marker.addTo(targetMap);\n    });\n  };\n\n  // Initialize map when data is ready\n  useEffect(() => {\n    if (!mapData || !imageDimensions || !mapContainerRef.current) return;\n    try {\n      const bounds = [[0, 0], [imageDimensions.height, imageDimensions.width]];\n      const map = L.map(mapContainerRef.current, {\n        crs: L.CRS.Simple,\n        maxZoom: 2,\n        minZoom: -2,\n        maxBounds: bounds,\n        zoomControl: true\n      });\n      L.imageOverlay(`http://localhost:3001/maps/${mapData.path}`, bounds).addTo(map);\n      map.fitBounds(bounds);\n      setLeafletMap(map);\n\n      // Add click handler for new markers\n      map.on('click', handleMapClick);\n\n      // Add existing markers if any\n      if (markers.length > 0) {\n        addMarkersToMap(markers, map);\n      }\n      setIsLoading(false);\n\n      // Cleanup function\n      return () => {\n        map.remove();\n      };\n    } catch (error) {\n      console.error('Error initializing map:', error);\n      setIsLoading(false);\n    }\n  }, [mapData, imageDimensions]);\n\n  // Handle map click as a separate function\n  const handleMapClick = e => {\n    if (!selectedCampaign || !mapId || !leafletMap) return;\n    const {\n      lat,\n      lng\n    } = e.latlng;\n\n    // Remove any existing temporary markers\n    leafletMap.eachLayer(layer => {\n      if (layer instanceof L.Marker && !layer.options.permanent) {\n        leafletMap.removeLayer(layer);\n      }\n    });\n    const tempMarker = L.marker([lat, lng], {\n      icon: createMarkerIcon('#FF0000'),\n      permanent: false\n    });\n    const tempMarkerData = {\n      map_id: Number(mapId),\n      lat: Number(lat),\n      lng: Number(lng),\n      label: '',\n      description: '',\n      color: '#FF0000',\n      campaign_id: selectedCampaign.id\n    };\n\n    // Create popup with unique IDs\n    const {\n      content,\n      formId,\n      deleteId,\n      submitId\n    } = createPopupContent(tempMarkerData, true);\n    const popup = L.popup({\n      className: 'custom-popup',\n      closeButton: true,\n      autoClose: false,\n      closeOnClick: false\n    }).setContent(content);\n    tempMarker.bindPopup(popup);\n\n    // Add event listeners when popup opens\n    tempMarker.on('popupopen', () => {\n      const form = document.getElementById(formId);\n      const cancelBtn = document.getElementById(deleteId);\n      const createBtn = document.getElementById(submitId);\n      if (cancelBtn) {\n        cancelBtn.onclick = () => {\n          leafletMap.removeLayer(tempMarker);\n        };\n      }\n      if (createBtn && form) {\n        createBtn.onclick = async () => {\n          const formData = new FormData(form);\n          const newMarker = {\n            ...tempMarkerData,\n            label: formData.get('label'),\n            description: formData.get('description'),\n            color: formData.get('color')\n          };\n          try {\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(newMarker)\n            });\n            if (!response.ok) throw new Error('Failed to create marker');\n            const savedMarker = await response.json();\n\n            // Convert lat/lng to numbers\n            const parsedMarker = {\n              ...savedMarker,\n              lat: Number(savedMarker.lat),\n              lng: Number(savedMarker.lng)\n            };\n            setMarkers(prev => [...prev, parsedMarker]);\n            leafletMap.removeLayer(tempMarker);\n\n            // Add the new marker\n            const marker = L.marker([parsedMarker.lat, parsedMarker.lng], {\n              icon: createMarkerIcon(parsedMarker.color || '#FF0000'),\n              permanent: true,\n              markerId: parsedMarker.id\n            });\n            const {\n              content\n            } = createPopupContent(parsedMarker, false);\n            const newPopup = L.popup({\n              className: 'custom-popup',\n              closeButton: true,\n              autoClose: false,\n              closeOnClick: false\n            }).setContent(content);\n            marker.bindPopup(newPopup);\n            marker.addTo(leafletMap);\n          } catch (error) {\n            console.error('Error creating marker:', error);\n          }\n        };\n      }\n    });\n    tempMarker.addTo(leafletMap).openPopup();\n  };\n  const handleMarkerCreate = () => {};\n  const handleMarkerUpdate = () => {};\n  const handleMarkerDelete = () => {};\n  const handleMarkerEdit = () => {};\n  if (isLoading || !mapData || !imageDimensions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%'\n        },\n        children: \"Loading map...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: 0,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: mapData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"more\",\n        \"aria-controls\": \"map-menu\",\n        \"aria-haspopup\": \"true\",\n        onClick: e => setMenuAnchorEl(e.currentTarget),\n        style: {\n          marginLeft: '8px',\n          color: '#111827'\n        },\n        children: /*#__PURE__*/_jsxDEV(DotsThreeVertical, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"map-menu\",\n      anchorEl: menuAnchorEl,\n      keepMounted: true,\n      open: Boolean(menuAnchorEl),\n      onClose: () => setMenuAnchorEl(null),\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => setMenuAnchorEl(null),\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => setMenuAnchorEl(null),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      style: {\n        height: 'calc(100vh - 80px)',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 434,\n    columnNumber: 5\n  }, this);\n};\n_s(Maps, \"b+iaCtCe9uOSNlXRpSt5YFTNjjk=\", false, function () {\n  return [useParams, useNavigate, useCampaign];\n});\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","L","useCampaign","IconButton","Menu","MenuItem","DotsThreeVertical","jsxDEV","_jsxDEV","MARKER_COLORS","Maps","onMapChange","_s","id","mapId","navigate","map","setMap","leafletMap","setLeafletMap","mapData","setMapData","markers","setMarkers","menuAnchorEl","setMenuAnchorEl","imageDimensions","setImageDimensions","isLoading","setIsLoading","selectedCampaign","mapContainerRef","useRef","remove","fetchMap","fetchMarkers","response","fetch","ok","Error","data","json","img","Image","onload","width","height","onerror","error","console","src","path","parsedMarkers","marker","lat","Number","lng","addMarkersToMap","createMarkerIcon","color","divIcon","className","html","iconSize","iconAnchor","popupAnchor","createPopupContent","markerData","isNewMarker","handlers","uniqueId","Math","random","toString","substring","formId","deleteId","submitId","content","label","description","Object","entries","value","join","markersData","targetMap","eachLayer","layer","Marker","options","permanent","removeLayer","forEach","warn","icon","markerId","popup","closeButton","autoClose","closeOnClick","setContent","bindPopup","on","form","document","getElementById","deleteBtn","submitBtn","onclick","method","prev","filter","m","formData","FormData","updatedMarker","get","campaign_id","headers","body","JSON","stringify","savedMarker","parsedMarker","setIcon","closePopup","addTo","current","bounds","crs","CRS","Simple","maxZoom","minZoom","maxBounds","zoomControl","imageOverlay","fitBounds","handleMapClick","length","e","latlng","tempMarker","tempMarkerData","map_id","cancelBtn","createBtn","newMarker","newPopup","openPopup","handleMarkerCreate","handleMarkerUpdate","handleMarkerDelete","handleMarkerEdit","children","style","display","alignItems","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","padding","margin","name","onClick","currentTarget","marginLeft","size","anchorEl","keepMounted","open","Boolean","onClose","ref","_c","$RefreshReg$"],"sources":["/Users/josh.thorn/AutoML Co-Pilot/flying-dog-inn-vtt-frontend/src/components/Maps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Maps.css';\nimport { useCampaign } from '../contexts/CampaignContext';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { DotsThreeVertical } from \"@phosphor-icons/react\";\n\n// Marker configuration\nconst MARKER_COLORS = {\n  '#FF0000': 'Red',\n  '#00FF00': 'Green',\n  '#0000FF': 'Blue',\n  '#FFFF00': 'Yellow',\n  '#FF00FF': 'Magenta',\n  '#00FFFF': 'Cyan',\n  '#000000': 'Black'\n};\n\nconst Maps = ({ onMapChange }) => {\n  const { id: mapId } = useParams();\n  const navigate = useNavigate();\n  const [map, setMap] = useState(null);\n  const [leafletMap, setLeafletMap] = useState(null);\n  const [mapData, setMapData] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { selectedCampaign } = useCampaign();\n  const mapContainerRef = React.useRef(null);\n\n  // Reset state when map changes\n  useEffect(() => {\n    setIsLoading(true);\n    setMapData(null);\n    setImageDimensions(null);\n    setMarkers([]);\n    if (leafletMap) {\n      leafletMap.remove();\n      setLeafletMap(null);\n    }\n  }, [mapId]);\n\n  // Fetch map data and markers\n  useEffect(() => {\n    if (selectedCampaign && mapId) {\n      fetchMap();\n      fetchMarkers();\n    }\n  }, [mapId, selectedCampaign]);\n\n  const fetchMap = async () => {\n    if (!selectedCampaign) return;\n    \n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch map');\n      const data = await response.json();\n      setMapData(data);\n      \n      // Load image dimensions\n      const img = new Image();\n      img.onload = () => {\n        setImageDimensions({ width: img.width, height: img.height });\n      };\n      img.onerror = (error) => {\n        console.error('Failed to load map image:', error);\n        setIsLoading(false);\n      };\n      img.src = `http://localhost:3001/maps/${data.path}`;\n      \n      if (onMapChange) onMapChange(data);\n    } catch (error) {\n      console.error('Error fetching map:', error);\n      setIsLoading(false);\n      navigate('/maps');\n    }\n  };\n\n  const fetchMarkers = async () => {\n    if (!selectedCampaign || !mapId) return;\n    \n    try {\n      const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers?campaign_id=${selectedCampaign.id}`);\n      if (!response.ok) throw new Error('Failed to fetch markers');\n      const data = await response.json();\n      \n      // Convert lat/lng to numbers\n      const parsedMarkers = data.map(marker => ({\n        ...marker,\n        lat: Number(marker.lat),\n        lng: Number(marker.lng)\n      }));\n      \n      setMarkers(parsedMarkers);\n      \n      // If map is already initialized, add markers\n      if (leafletMap) {\n        addMarkersToMap(parsedMarkers, leafletMap);\n      }\n    } catch (error) {\n      console.error('Error fetching markers:', error);\n    }\n  };\n\n  const createMarkerIcon = (color = '#FF0000') => {\n    return L.divIcon({\n      className: 'custom-marker',\n      html: `<div class=\"marker-icon\" style=\"color: ${color}\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"48\" viewBox=\"0 0 256 256\">\n          <path fill=\"currentColor\" d=\"M128,16a88.1,88.1,0,0,0-88,88c0,75.3,80,132.17,83.41,134.55a8,8,0,0,0,9.18,0C136,236.17,216,179.3,216,104A88.1,88.1,0,0,0,128,16Z\" stroke=\"rgba(0, 0, 0, 0.25)\" stroke-width=\"16\"/>\n        </svg>\n      </div>`,\n      iconSize: [32, 48],\n      iconAnchor: [16, 48],\n      popupAnchor: [0, -24]\n    });\n  };\n\n  const createPopupContent = (markerData, isNewMarker = false, handlers) => {\n    const uniqueId = Math.random().toString(36).substring(7);\n    const formId = `marker-form-${uniqueId}`;\n    const deleteId = `delete-btn-${uniqueId}`;\n    const submitId = `submit-btn-${uniqueId}`;\n\n    // Create popup content with unique IDs\n    const content = `\n      <div class=\"marker-content\">\n        <form id=\"${formId}\" class=\"marker-form\">\n          <input \n            type=\"text\" \n            name=\"label\" \n            value=\"${markerData.label || ''}\" \n            placeholder=\"Marker Label\" \n            class=\"marker-input\" \n            required\n          />\n          <textarea \n            name=\"description\" \n            placeholder=\"Description (optional)\" \n            class=\"marker-input\" \n            rows=\"2\"\n          >${markerData.description || ''}</textarea>\n          <select name=\"color\" class=\"marker-input\">\n            ${Object.entries(MARKER_COLORS).map(([value, label]) => `\n              <option value=\"${value}\" ${value === (markerData.color || '#FF0000') ? 'selected' : ''}>\n                ${label}\n              </option>\n            `).join('')}\n          </select>\n          <div class=\"marker-actions\">\n            <button type=\"button\" id=\"${deleteId}\" class=\"delete-button\">\n              ${isNewMarker ? 'Cancel' : 'Delete'}\n            </button>\n            <button type=\"button\" id=\"${submitId}\" class=\"dnd-button\">\n              ${isNewMarker ? 'Add Marker' : 'Save Changes'}\n            </button>\n          </div>\n        </form>\n      </div>\n    `;\n\n    // Return both content and IDs for event binding\n    return { content, formId, deleteId, submitId };\n  };\n\n  const addMarkersToMap = (markersData, targetMap) => {\n    if (!targetMap) return;\n\n    // Only clear temporary markers\n    targetMap.eachLayer((layer) => {\n      if (layer instanceof L.Marker && !layer.options.permanent) {\n        targetMap.removeLayer(layer);\n      }\n    });\n\n    // Add new markers\n    markersData.forEach(markerData => {\n      if (!markerData || typeof markerData.lat !== 'number' || typeof markerData.lng !== 'number') {\n        console.warn('Invalid marker data:', markerData);\n        return;\n      }\n\n      // Create new marker\n      const marker = L.marker([markerData.lat, markerData.lng], {\n        icon: createMarkerIcon(markerData.color || '#FF0000'),\n        permanent: true,\n        markerId: markerData.id\n      });\n\n      // Create popup with unique IDs\n      const { content, formId, deleteId, submitId } = createPopupContent(markerData, false);\n      const popup = L.popup({\n        className: 'custom-popup',\n        closeButton: true,\n        autoClose: false,\n        closeOnClick: false\n      }).setContent(content);\n\n      marker.bindPopup(popup);\n\n      // Add event listeners when popup opens\n      marker.on('popupopen', () => {\n        // Get elements using unique IDs\n        const form = document.getElementById(formId);\n        const deleteBtn = document.getElementById(deleteId);\n        const submitBtn = document.getElementById(submitId);\n\n        if (deleteBtn) {\n          deleteBtn.onclick = async () => {\n            try {\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}?campaign_id=${selectedCampaign.id}`, {\n                method: 'DELETE',\n              });\n              \n              if (!response.ok) throw new Error('Failed to delete marker');\n              \n              setMarkers(prev => prev.filter(m => m.id !== markerData.id));\n              targetMap.removeLayer(marker);\n            } catch (error) {\n              console.error('Error deleting marker:', error);\n            }\n          };\n        }\n\n        if (submitBtn && form) {\n          submitBtn.onclick = async () => {\n            const formData = new FormData(form);\n            const updatedMarker = {\n              ...markerData,\n              label: formData.get('label'),\n              description: formData.get('description'),\n              color: formData.get('color'),\n              campaign_id: selectedCampaign.id\n            };\n\n            try {\n              const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers/${markerData.id}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(updatedMarker)\n              });\n\n              if (!response.ok) throw new Error('Failed to update marker');\n              const savedMarker = await response.json();\n              \n              // Convert lat/lng to numbers\n              const parsedMarker = {\n                ...savedMarker,\n                lat: Number(savedMarker.lat),\n                lng: Number(savedMarker.lng)\n              };\n              \n              setMarkers(prev => prev.map(m => m.id === parsedMarker.id ? parsedMarker : m));\n              marker.setIcon(createMarkerIcon(parsedMarker.color));\n              marker.closePopup();\n            } catch (error) {\n              console.error('Error updating marker:', error);\n            }\n          };\n        }\n      });\n\n      marker.addTo(targetMap);\n    });\n  };\n\n  // Initialize map when data is ready\n  useEffect(() => {\n    if (!mapData || !imageDimensions || !mapContainerRef.current) return;\n\n    try {\n      const bounds = [[0, 0], [imageDimensions.height, imageDimensions.width]];\n      const map = L.map(mapContainerRef.current, {\n        crs: L.CRS.Simple,\n        maxZoom: 2,\n        minZoom: -2,\n        maxBounds: bounds,\n        zoomControl: true\n      });\n\n      L.imageOverlay(`http://localhost:3001/maps/${mapData.path}`, bounds).addTo(map);\n      map.fitBounds(bounds);\n      setLeafletMap(map);\n\n      // Add click handler for new markers\n      map.on('click', handleMapClick);\n\n      // Add existing markers if any\n      if (markers.length > 0) {\n        addMarkersToMap(markers, map);\n      }\n\n      setIsLoading(false);\n\n      // Cleanup function\n      return () => {\n        map.remove();\n      };\n    } catch (error) {\n      console.error('Error initializing map:', error);\n      setIsLoading(false);\n    }\n  }, [mapData, imageDimensions]);\n\n  // Handle map click as a separate function\n  const handleMapClick = (e) => {\n    if (!selectedCampaign || !mapId || !leafletMap) return;\n\n    const { lat, lng } = e.latlng;\n    \n    // Remove any existing temporary markers\n    leafletMap.eachLayer((layer) => {\n      if (layer instanceof L.Marker && !layer.options.permanent) {\n        leafletMap.removeLayer(layer);\n      }\n    });\n\n    const tempMarker = L.marker([lat, lng], {\n      icon: createMarkerIcon('#FF0000'),\n      permanent: false\n    });\n\n    const tempMarkerData = {\n      map_id: Number(mapId),\n      lat: Number(lat),\n      lng: Number(lng),\n      label: '',\n      description: '',\n      color: '#FF0000',\n      campaign_id: selectedCampaign.id\n    };\n\n    // Create popup with unique IDs\n    const { content, formId, deleteId, submitId } = createPopupContent(tempMarkerData, true);\n    const popup = L.popup({\n      className: 'custom-popup',\n      closeButton: true,\n      autoClose: false,\n      closeOnClick: false\n    }).setContent(content);\n\n    tempMarker.bindPopup(popup);\n\n    // Add event listeners when popup opens\n    tempMarker.on('popupopen', () => {\n      const form = document.getElementById(formId);\n      const cancelBtn = document.getElementById(deleteId);\n      const createBtn = document.getElementById(submitId);\n\n      if (cancelBtn) {\n        cancelBtn.onclick = () => {\n          leafletMap.removeLayer(tempMarker);\n        };\n      }\n\n      if (createBtn && form) {\n        createBtn.onclick = async () => {\n          const formData = new FormData(form);\n          const newMarker = {\n            ...tempMarkerData,\n            label: formData.get('label'),\n            description: formData.get('description'),\n            color: formData.get('color')\n          };\n\n          try {\n            const response = await fetch(`http://localhost:3001/api/maps/${mapId}/markers`, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(newMarker)\n            });\n\n            if (!response.ok) throw new Error('Failed to create marker');\n            const savedMarker = await response.json();\n            \n            // Convert lat/lng to numbers\n            const parsedMarker = {\n              ...savedMarker,\n              lat: Number(savedMarker.lat),\n              lng: Number(savedMarker.lng)\n            };\n            \n            setMarkers(prev => [...prev, parsedMarker]);\n            leafletMap.removeLayer(tempMarker);\n            \n            // Add the new marker\n            const marker = L.marker([parsedMarker.lat, parsedMarker.lng], {\n              icon: createMarkerIcon(parsedMarker.color || '#FF0000'),\n              permanent: true,\n              markerId: parsedMarker.id\n            });\n            \n            const { content } = createPopupContent(parsedMarker, false);\n            const newPopup = L.popup({\n              className: 'custom-popup',\n              closeButton: true,\n              autoClose: false,\n              closeOnClick: false\n            }).setContent(content);\n            \n            marker.bindPopup(newPopup);\n            marker.addTo(leafletMap);\n          } catch (error) {\n            console.error('Error creating marker:', error);\n          }\n        };\n      }\n    });\n\n    tempMarker.addTo(leafletMap).openPopup();\n  };\n\n  const handleMarkerCreate = () => {};\n  const handleMarkerUpdate = () => {};\n  const handleMarkerDelete = () => {};\n  const handleMarkerEdit = () => {};\n\n  if (isLoading || !mapData || !imageDimensions) {\n    return (\n      <div className=\"map-container\">\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\n          Loading map...\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"map-container\">\n      <div style={{ display: 'flex', alignItems: 'center', padding: '0 16px' }}>\n        <h2 style={{ margin: 0, display: 'flex', alignItems: 'center' }}>{mapData.name}</h2>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"map-menu\"\n          aria-haspopup=\"true\"\n          onClick={(e) => setMenuAnchorEl(e.currentTarget)}\n          style={{ marginLeft: '8px', color: '#111827' }}\n        >\n          <DotsThreeVertical size={24} />\n        </IconButton>\n      </div>\n\n      <Menu\n        id=\"map-menu\"\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={() => setMenuAnchorEl(null)}\n      >\n        <MenuItem onClick={() => setMenuAnchorEl(null)}>Rename</MenuItem>\n        <MenuItem onClick={() => setMenuAnchorEl(null)}>Delete</MenuItem>\n      </Menu>\n\n      <div ref={mapContainerRef} style={{ height: 'calc(100vh - 80px)', width: '100%' }} />\n    </div>\n  );\n};\n\nexport default Maps;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}